{"version":3,"sources":["img/blueguy.png","components/Sketches/constants/index.js","img/tla-logo.svg","firebase/index.js","constants/index.js","components/common/Footer.js","components/Login/LoginInput.js","components/Login/LoginForm.js","components/Login.js","actions/userDataActions.js","components/containers/LoginContainer.js","components/Editor/constants/index.js","components/common/Radio.js","components/Editor/components/EditorRadio.js","components/common/OpenPanelButton.js","actions/uiActions.js","components/common/containers/OpenPanelButtonContainer.js","components/Editor/components/DropdownButton.js","components/Editor/containers/DropdownButtonContainer.js","components/Editor/components/Output/Processing.js","components/Editor/components/Output/Python.js","components/Editor/components/Output.js","components/Editor/containers/OutputContainer.js","lib/fetch.js","components/Editor/components/TextEditor.js","actions/programsActions.js","components/Editor/containers/TextEditorContainer.js","components/Editor/index.js","actions/outputActions.js","components/Editor/containers/EditorContainer.js","components/Sketches/components/SketchBox.js","components/Sketches/components/ConfirmDeleteModal.js","components/Sketches/containers/ConfirmDeleteModalContainer.js","components/Sketches/components/DropdownButton.js","components/Sketches/components/CreateSketchModal.js","components/Sketches/containers/CreateSketchModalContainer.js","components/Sketches/components/EditSketchModal.js","components/Sketches/containers/EditSketchModalContainer.js","components/Sketches/index.js","components/Sketches/containers/SketchesContainer.js","components/common/ProfilePanel.js","components/common/containers/ProfilePanelContainer.js","components/Main.js","components/containers/MainContainer.js","components/common/LoadingPage.js","components/CreateUser/CreateUserForm.js","components/CreateUser.js","components/containers/CreateUserContainer.js","components/Error.js","components/PageNotFound.js","components/app.js","components/containers/AppContainer.js","registerServiceWorker.js","reducers/userDataReducer.js","reducers/programsReducer.js","reducers/outputReducer.js","reducers/uiReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","SketchThumbnailArray","LanguageDropdownValues","display","value","LanguageDropdownDefault","process","firebase__WEBPACK_IMPORTED_MODULE_0__","config","n","firebase","auth","FacebookAuthProvider","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CODEMIRROR_CONVERSIONS","forEach","lang","console","error","SERVER_URL","PYTHON","JAVASCRIPT","HTML","JAVA","PROCESSING","CPP","PHOTO_NAMES","lightbulb","orange","pear","apple","hotdog","icecream","cloud","earth","heart","DEFAULT_PHOTO_NAME","MINIMUM_USERNAME_LENGTH","MINIMUM_PASSWORD_LENGTH","MINIMUM_DISPLAY_NAME_LENGTH","MAXIMUM_USERNAME_LENGTH","MAXIMUM_PASSWORD_LENGTH","MAXIMUM_DISPLAY_NAME_LENGTH","DEFAULT_MODE","DEFAULT_LANG","RING_LOADER_SIZE","PANEL_SIZE","CLOSED_PANEL_LEFT","OPEN_PANEL_LEFT","EMAIL_DOMAIN_NAME","common_Footer","props","react_default","a","createElement","className","href","target","rel","src","TLALogo","alt","LoginInput","_ref","type","waiting","data","onChange","disabled","name","placeholder","e","LoginModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEmailLogin","setState","errorMsg","preventDefault","email","state","username","passwordHash","SHA256","password","toString","signInWithEmailAndPassword","then","catch","err","newMsg","message","code","handleSocialLogin","signInWithPopup","provider","updateUsername","updatePassword","renderErrorMessage","msg","addBreak","renderInputs","renderAction","react_spinners","color","size","loading","Button","onSubmit","Link","to","React","Component","Login","renderMainContent","style","backgroundImage","concat","LoginGuy","LoginForm_LoginModal","LOAD_USER_DATA","loadUserData","uid","userData","_objectSpread","CLEAR_USER_DATA","clearUserData","LOAD_FAILURE","loadFailure","SET_DISPLAY_NAME","SET_MOST_RECENT_PROGRAM","setMostRecentProgram","program","SET_PHOTO_NAME","LoginPage","connect","ownProps","loggedIn","dispatch","user","CODE_AND_OUTPUT","CODE_ONLY","OUTPUT_ONLY","EDITOR_WIDTH_BREAKPOINT","Radio","updateSelectedState","selected","alreadySelected","allowMultipleSelected","newState","i","indexOf","splice","handleClick","renderOption","index","optionStyle","isSelected","includes","id","options","length","assign","selectedOptionStyle","selectedBgColor","backgroundColor","selectedColor","bgColor","onClick","key","defaultSelected","containerStyle","map","EditorRadio","isSmall","push","Radio_Radio","viewMode","height","updateViewMode","OpenPanelButton","panelOpen","togglePanel","title","react_fontawesome_index_es","icon","faBars","SCREEN_RESIZE","TOGGLE_PANEL","SET_PANEL","OpenPanelButtonContainer","ui","DropdownButton","toggleHandler","prevVal","dropdownOpen","selectLanguage","result","dirty","window","confirm","onSelect","renderDropdownItems","dropdownItems","faLanguage","language","faPython","faCogs","faHtml5","DropdownItem","fixedWidth","marginLeft","defaultOpen","_this2","currentLanguage","Dropdown","isOpen","toggle","DropdownToggle","caret","displayValue","DropdownMenu","DropdownButtonContainer","mostRecentProgram","mostRecentLanguage","programs","getIn","listOfPrograms","keySeq","Processing","showConsole","getUserScript","getProcessingSrcDocBody","Python","getPythonSrcDocSkulptScript","getPythonSrcDocBody","Output","shouldComponentUpdate","nextProps","nextState","firstLoad","run","counter","reRenderOutput","prevState","renderIframe","getSrcDoc","screenHeight","srcDoc","onLoad","log","renderOutput","_this$props","runResult","srcDocFunc","CreateProcessingDoc","btoa","CreatePythonDoc","renderOpenPanelButton","containers_OpenPanelButtonContainer","renderLanguageDropdown","containers_DropdownButtonContainer","renderRadio","components_EditorRadio","toggleConsole","renderConsoleButton","faTerminal","renderBanner","flex","runCode","faPlay","OutputContainer","clearOutput","getUserData","asyncToGenerator","regenerator_default","mark","_callee","includePrograms","getUserDataEndpoint","_ref2","ok","_args","arguments","wrap","_context","prev","next","undefined","constants","method","mode","fetch","sent","json","abrupt","t0","stop","apply","updatePrograms","body","keys","JSON","stringify","headers","Content-Type","updateProgramsEndpoint","updateUserData","updateUserDataEndpoint","createSketch","deleteSketch","CodeMirror","navigator","require","Controlled","TextEditor","componentWillUnmount","removeEventListener","onLeave","checkDirty","programToUpdate","_callee2","ev","_context2","returnValue","_x","setCodeMirrorInstance","codeMirrorInstance","updateCode","editor","newCode","dirtyCode","setProgramCode","setCurrentLine","cm","_this$state","currentLine","line","getCursor","removeLineClass","addLineClass","addEventListener","theme","lineNumbers","lineWrapping","indentWithTabs","editorDidMount","refresh","onCursor","onBeforeChange","SET_PROGRAM_CODE","SET_PROGRAM_LANGUAGE","SET_PROGRAM_NAME","SET_PROGRAM_THUMBNAIL","DELETE_PROGRAM","LOAD_PROGRAMS","CLEAR_PROGRAMS","SET_PROGRAM_DIRTY","setProgramDirty","ADD_PROGRAM","TextEditorContainer","_state$userData","TextEditorContainer_objectSpread","get","Immutable","Map","toJS","Editor","resetSaveText","saveText","handleSave","event","setTimeout","cleanCode","renderDropdown","renderCodeAndOutput","index_esm","resizerStyle","borderLeft","borderRight","width","pane1Style","onDragStarted","onDragFinished","transition","split","minSize","screenWidth","maxSize","allowResize","renderCode","faSave","minHeight","maxHeight","containers_TextEditorContainer","containers_OutputContainer","renderContent","codeStyle","left","redirect","prevProps","Redirect","CLEAR_OUTPUT","SET_RUN_RESULT","SET_OUTPUT_LANGUAGE","SET_OUTPUT","EditorContainer","output","setOutput","SketchBox","redirFunc","pathname","img","Row","Col","editFunc","faEdit","downloadFunc","faDownload","deleteFunc","faTrashAlt","ConfirmDeleteModal","closeModal","onClose","onDeleteSubmit","docID","sketchKey","res","deleteProgram","spinner","lib_default","onRequestClose","ariaHideApp","Container","sketchName","block","ConfirmDeleteModalContainer","CreateSketchModal","thumbnail","disableSubmit","setNext","val","onBack","badThumbnailInput","badNameInput","badLanguageInput","notFound","onFirstSubmit","onSecondSubmit","addProgram","programData","renderSecondModal","icons","thumbnailPreview","overlayClassName","renderFirstModal","FormGroup","row","Label","for","xs","Input","components_DropdownButton_DropdownButton","CreateSketchModalContainer","EditSketchModal","newLanguage","newName","newThumbnail","onThumbnails","handleSubmitEdit","doUpdate","updateData","setProgramLanguage","setProgramName","setProgramThumbnail","sketchImg","sketchLang","marginRight","_this3","textAlign","renderThumbnailModal","renderMainModal","EditSketchModalContainer","ROW_PADDING","SKETCH_WIDTH","Sketches","getRandomSketchThumbnail","Math","floor","random","downloadSketchCode","extension","file","element","document","Blob","ProcessingConstructor","URL","createObjectURL","download","appendChild","click","setCreateSketchModalOpen","createSketchModalOpen","setConfirmDeleteModalOpen","sketch","confirmDeleteModalOpen","selectedSketch","selectedKey","setEditSketchModalOpen","editSketchModalOpen","selectedImg","selectedLang","setProgram","renderHeader","faFile","getThumbnailSrc","renderSketches","newList","sketches","sort","b","languageDisplay","components_SketchBox","numSketchesPerRow","calculatedWidth","rows","originalLength","renderConfirmDeleteModal","containers_ConfirmDeleteModalContainer","renderCreateSketchModal","containers_CreateSketchModalContainer","renderEditSketchModal","containers_EditSketchModalContainer","Fragment","SketchesContainer","temp","ProfilePanel","handleOpenModal","showModal","selectedImage","photoName","handleCloseModal","handleEditNameClick","editingName","handleEditImageClick","onNameChange","checkInputs","displayNameMessage","match","onNameSubmit","displayName","setDisplayName","onImageSubmit","setPhotoName","renderPanelImage","onMouseEnter","imageIsHovering","onMouseLeave","onImageClick","renderImageModal","renderName","autoFocus","onBlur","nameIsHovering","renderEditorButton","faPencilAlt","renderSketchesButton","faBook","renderSignOutButton","signOut","faSignOutAlt","renderButtons","panelButtons","contentType","renderCollapseButton","faTimes","panelStyle","ProfilePanelContainer","collectUserPhoto","renderSketchesPage","containers_SketchesContainer","renderEditor","containers_EditorContainer","textEditorSize","containers_ProfilePanelContainer","MainContainer","panelLeft","Main","Loading","CreateUserForm","confirmPassword","badInputs","usernameMessage","passwordMessage","submit","errorMessage","passHash","createUserWithEmailAndPassword","updateConfirmPassword","renderLink","CreateUser","CreateUserForm_CreateUserForm","CreateUserPage","compose","withFirestore","Error","App","componentWillMount","onAuthStateChanged","onAuthHandler","handleResize","componentWillUnmout","screenResize","innerWidth","innerHeight","showErrorPage","checkedAuth","_x2","renderHome","isValidUser","LoadingPage","components_Error","BrowserRouter","basename","Switch","Route","exact","path","render","LoginContainer","containers_MainContainer","CreateUserContainer","PageNotFound","Root","_loadUserData2","onFailure","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","userDataReducer","action","response","newPhotoName","programsReducer","fromJS","setIn","set","delete","outputReducer","uiReducer","appReducers","combineReducers","initializeApp","store","createStore","ReactDOM","es","AppContainer","getElementById","origin","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0f32ecb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blueguy.ade51e63.png\";","const SketchThumbnailArray = [\n  \"Ant\",\n  \"Badger\",\n  \"Bear\",\n  \"Beaver\",\n  \"Bird\",\n  \"Bug\",\n  \"Bull\",\n  \"Bumblebee\",\n  \"Butterfly\",\n  \"Cat\",\n  \"Caterpillar\",\n  \"Chicken\",\n  \"Clown Fish\",\n  \"Corgi\",\n  \"Cow\",\n  \"Crab\",\n  \"Deer\",\n  \"Dinosaur\",\n  \"Dog\",\n  \"Dolphin\",\n  \"Dragonfly\",\n  \"Duck\",\n  \"Elephant\",\n  \"Falcon\",\n  \"Fish\",\n  \"Fly\",\n  \"Frog\",\n  \"Giraffe\",\n  \"Gorilla\",\n  \"Grasshopper\",\n  \"Horse\",\n  \"Hummingbird\",\n  \"Insect\",\n  \"Kangaroo\",\n  \"Kiwi Bird\",\n  \"Ladybird\",\n  \"Leopard\",\n  \"Lion\",\n  \"Llama\",\n  \"Mite\",\n  \"Mosquito\",\n  \"Octopus\",\n  \"Panda\",\n  \"Prawn\",\n  \"Puffin Bird\",\n  \"Rabbit\",\n  \"Rhinoceros\",\n  \"Seahorse\",\n  \"Shark\",\n  \"Sheep\",\n  \"Snail\",\n  \"Spider\",\n  \"Starfish\",\n  \"Stork\",\n  \"Turtle\",\n  \"Unicorn\",\n  \"Whale\",\n  \"Wolf\",\n];\n\nconst LanguageDropdownValues = [\n  { display: \"Python\", value: \"python\" },\n  { display: \"Processing\", value: \"processing\" },\n  { display: \"HTML\", value: \"html\" },\n];\n\nconst LanguageDropdownDefault = { display: \"Python\", value: \"python\" };\n\nmodule.exports = {\n  SketchThumbnailArray,\n  LanguageDropdownValues,\n  LanguageDropdownDefault,\n};\n","module.exports = __webpack_public_path__ + \"static/media/tla-logo.96efe073.svg\";","import firebase from \"firebase\";\n\nexport const provider = new firebase.auth.FacebookAuthProvider();\n\nlet config = {\n  apiKey: \"AIzaSyDVyHkYHjs7LeHyOWMSPRMTRgr8BrdkXis\",\n  authDomain: \"aseemconnorpracticedb.firebaseapp.com\",\n  databaseURL: \"https://aseemconnorpracticedb.firebaseio.com\",\n  projectId: \"aseemconnorpracticedb\",\n  storageBucket: \"aseemconnorpracticedb.appspot.com\",\n  messagingSenderId: \"849734484070\",\n  appId: \"1:849734484070:web:8d3eff0ee977915b\",\n};\n\nif (process && process.env && process.env.REACT_APP_FS_PROJ === \"prod\") {\n  config = {\n    apiKey: \"AIzaSyBfGWPbFcqH2HLc40B1yCY12B9F0_PO8SM\",\n    authDomain: \"teachlacodeplatform-production.firebaseapp.com\",\n    databaseURL: \"https://teachlacodeplatform-production.firebaseio.com\",\n    projectId: \"teachlacodeplatform-production\",\n    storageBucket: \"teachlacodeplatform-production.appspot.com\",\n    messagingSenderId: \"165628144896\",\n  };\n}\n\nexport default config;\n","//TODO: Break up large constants file into smaller constants file\n\nconst PYTHON = \"python\";\nconst JAVASCRIPT = \"javascript\";\nconst HTML = \"html\";\nconst JAVA = \"java\";\nconst PROCESSING = \"processing\";\nconst CPP = \"c++\";\n\nconst SUPPORTED_LANGUAGES = [PYTHON, JAVASCRIPT, HTML, PROCESSING];\n\n//used for syntax highlighting in editor\nlet CODEMIRROR_CONVERSIONS = {};\n\n//for each s\nSUPPORTED_LANGUAGES.forEach(lang => {\n  switch (lang) {\n    case PYTHON:\n      return (CODEMIRROR_CONVERSIONS[lang] = \"python\");\n    case JAVASCRIPT:\n      return (CODEMIRROR_CONVERSIONS[lang] = \"javascript\");\n    case HTML:\n      return (CODEMIRROR_CONVERSIONS[lang] = \"htmlmixed\");\n    case JAVA:\n      return (CODEMIRROR_CONVERSIONS[lang] = \"text/x-java\");\n    case PROCESSING:\n      return (CODEMIRROR_CONVERSIONS[lang] = \"javascript\");\n    case CPP:\n      return (CODEMIRROR_CONVERSIONS[lang] = \"text/x-csrc\");\n    default:\n      console.error(\"SUPPORTED LANGUAGE WITH NO MODE\");\n  }\n});\n\nconst PHOTO_NAMES = {\n  lightbulb: \"https://i.imgur.com/WKDHPon.pngg\",\n  orange: \"https://i.imgur.com/DMc0L0P.png\",\n  pear: \"https://i.imgur.com/T03MlZH.png\",\n  apple: \"https://i.imgur.com/5S83eug.png\",\n  hotdog: \"https://i.imgur.com/CWwlIOF.png\",\n  icecream: \"https://i.imgur.com/OBHz5An.png\",\n  cloud: \"https://i.imgur.com/Cw6IRTu.png\",\n  earth: \"https://i.imgur.com/SBlnUnG.png\",\n  heart: \"https://i.imgur.com/ySz1WAS.png\",\n};\n\n//Local Server\nvar SERVER_URL = \"http://localhost:8081\";\nif (process && process.env && process.env.REACT_APP_SERVER_TYPE === \"prod\") {\n  //Heroku Server\n  SERVER_URL = \"https://teach-la-backend.herokuapp.com\";\n}\n\nconst PANEL_SIZE = 250;\n\nmodule.exports = {\n  //Language definitions\n  PYTHON,\n  JAVASCRIPT,\n  HTML,\n  JAVA,\n  PROCESSING,\n  CPP,\n\n  // photo names\n  PHOTO_NAMES,\n  DEFAULT_PHOTO_NAME: \"icecream\",\n\n  //Server Host Name\n  SERVER_URL,\n\n  //User value constants\n  MINIMUM_USERNAME_LENGTH: 6,\n  MINIMUM_PASSWORD_LENGTH: 6,\n  MINIMUM_DISPLAY_NAME_LENGTH: 1,\n  MAXIMUM_USERNAME_LENGTH: 20,\n  MAXIMUM_PASSWORD_LENGTH: 20,\n  MAXIMUM_DISPLAY_NAME_LENGTH: 25,\n\n  //Defaults\n  DEFAULT_MODE: PYTHON,\n  DEFAULT_LANG: PYTHON,\n\n  // UI constants\n  RING_LOADER_SIZE: 50,\n  PANEL_SIZE,\n  CLOSED_PANEL_LEFT: -1 * PANEL_SIZE,\n  OPEN_PANEL_LEFT: 0,\n\n  //codemirror conversions\n  CODEMIRROR_CONVERSIONS,\n\n  //Firebase constants\n  EMAIL_DOMAIN_NAME: \"@fake.com\",\n};\n","import React from \"react\";\nimport TLALogo from \"../../img/tla-logo.svg\";\nimport \"styles/Footer.scss\";\n\nexport default props => (\n  <footer className=\"footer\">\n    <a href=\"https://github.com/uclaacm/TeachLAFrontend\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <img\n        className=\"footer-image\"\n        src={TLALogo}\n        alt=\"Teach LA logo and link to GitHub Repository\"\n      />\n    </a>\n  </footer>\n);\n","import React from \"react\";\nimport \"styles/Login.scss\";\n\n/**-------Props-------\n * type: string, if password, hides the input with dots; also used as the header for the input\n * waiting: boolean that disables the input if true\n * data: value inside the input\n * onChange: function to be called when input changes\n */\n\nexport default ({ type, waiting, data, onChange }) => (\n  <div>\n    <div className=\"login-form-input-header\">{type}</div>\n    <input\n      className=\"login-form-input\"\n      type={type === \"Password\" || type === \"Confirm Password\" ? \"password\" : \"text\"}\n      disabled={waiting}\n      name={type}\n      placeholder=\"\"\n      value={data}\n      onChange={e => onChange(e.target.value)}\n    />\n    <br />\n  </div>\n);\n","import React from \"react\";\nimport SHA256 from \"crypto-js/sha256\";\nimport { Button } from \"reactstrap\";\nimport { RingLoader } from \"react-spinners\";\nimport { EMAIL_DOMAIN_NAME } from \"../../constants\";\nimport { Link } from \"react-router-dom\";\nimport LoginInput from \"./LoginInput\";\nimport firebase from \"firebase\";\nimport \"styles/Login.scss\";\n\n/**-------Props--------\n * provider: Firebase Provider that allows the app to do Facebook Logins\n */\n\nexport default class LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errorMsg: \"\",\n      waiting: false,\n    };\n  }\n\n  //===========React Lifecycle Functions============//\n  componentDidMount() {}\n\n  handleEmailLogin = e => {\n    this.setState({ waiting: true, errorMsg: \"\" });\n\n    e.preventDefault(); //prevents page from reloading after submitting form\n    let email = this.state.username + EMAIL_DOMAIN_NAME;\n    let passwordHash = SHA256(this.state.password).toString();\n\n    if (email && passwordHash) {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, passwordHash)\n        .then(() => {})\n        .catch(err => {\n          console.error(err);\n          let newMsg = err.message;\n          switch (err.code) {\n            case \"auth/invalid-email\":\n              newMsg =\n                \"Invalid username. Usernames must only have alphanumeric characters plus !@#$%.\";\n              break;\n            case \"auth/user-not-found\":\n              newMsg = \"No account found for username.\";\n              break;\n            case \"auth/wrong-password\":\n              newMsg = \"Invalid password provided.\";\n              break;\n            case \"auth/network-request-failed\":\n              newMsg = \"Network error - check your internet connection.\";\n              break;\n            case \"auth/app-deleted\":\n            case \"auth/app-not-authorized\":\n            case \"auth/argument-error\":\n            case \"auth/invalid-api-key\":\n            case \"auth/operation-not-allowed\":\n            case \"auth/requires-recent-login\":\n            case \"auth/unauthorized-domain\":\n              newMsg =\n                \"App was not properly configured. Please contact administrator. Error: \" + err.code;\n              break;\n            case \"auth/invalid-user-token\":\n            case \"auth/user-disabled\":\n            case \"auth/user-token-expired\":\n            case \"auth/web-storage-unsupported\":\n              newMsg = \"Issue with user. Please contact administrator. Error: \" + err.code;\n              break;\n            default:\n              newMsg = \"Failed to sign in: \" + err.code;\n          }\n          this.setState({ errorMsg: newMsg, waiting: false });\n        });\n    } else {\n      this.setState({ waiting: false, errorMsg: \"Failed to reach Firebase login services\" });\n    }\n  };\n\n  handleSocialLogin = e => {\n    this.setState({ waiting: true });\n    firebase\n      .auth()\n      .signInWithPopup(this.props.provider)\n      .catch(function(err) {\n        this.setState({ errorMsg: \"Failed to use Facebook login provider\", waiting: false });\n      });\n  };\n\n  updateUsername = username => this.setState({ username });\n  updatePassword = password => this.setState({ password });\n\n  renderErrorMessage = (msg, addBreak) => {\n    if (msg)\n      return (\n        <span>\n          <div className=\"login-form-input-error\">{msg}</div>\n          {addBreak ? <br /> : null}\n        </span>\n      );\n\n    return <br />;\n  };\n\n  renderInputs = () => (\n    <div className=\"login-form-input-list\">\n      <div>\n        <LoginInput\n          type={\"Username\"}\n          data={this.state.username}\n          waiting={this.state.waiting}\n          onChange={this.updateUsername}\n        />\n        <LoginInput\n          type={\"Password\"}\n          data={this.state.password}\n          waiting={this.state.waiting}\n          onChange={this.updatePassword}\n        />\n      </div>\n      {this.renderErrorMessage(this.state.errorMsg)}\n    </div>\n  );\n\n  renderAction = () => {\n    if (this.state.waiting) {\n      return (\n        <div className=\"login-form-loader\">\n          <RingLoader color={\"#857e8f\"} size={50} loading={true} />\n        </div>\n      );\n    } else {\n      /* We've disabled the social button for now, but here it is.\n        <SocialButton\n          imgSrc=\"/img/fbLogo1.png\"\n          bgColor=\"#4267b2\"\n          textColor=\"white\"\n          value=\"Login with Facebook\"\n          handleLogin={this.handleSocialLogin}\n        />\n      */\n      return (\n        <Button className=\"login-form-button\" size=\"lg\" type=\"submit\">\n          Login\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <form className=\"login-form\" onSubmit={this.handleEmailLogin}>\n          <h1>\n            Welcome to <span className=\"force-no-wrap\">&lt;Teach LA&gt;</span>\n          </h1>\n          <br />\n          {this.renderInputs()}\n          {this.renderAction()}\n          <br />\n          <br />\n          <Link to=\"/createUser\" className=\"login-form-link\">\n            Don't have an account? Create one now!\n          </Link>\n          <br />\n          <br />\n          <details>\n            <summary>Forgot your password?</summary>\n            <p>\n              Send us an email at <a href=\"mailto:acmteachla@gmail.com\">acmteachla@gmail.com</a>{\" \"}\n              with \"Forgot Password\" in the subject, and we'll do our best to help you out!\n            </p>\n          </details>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Footer from \"./common/Footer\";\nimport \"styles/Login.scss\";\nimport LoginForm from \"./Login/LoginForm\";\nimport LoginGuy from \"img/blueguy.png\";\n\n/**--------Props--------\n * provider: Facebook Provider used to login with Facebook\n */\n\nclass Login extends React.Component {\n  /**\n   * constructor - sets initial state\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderMainContent = () => {\n    return (\n      <div className=\"login-page-content\" style={{ backgroundImage: `url(${LoginGuy})` }}>\n        <LoginForm provider={this.props.provider} />\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        {this.renderMainContent()}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","export const LOAD_USER_DATA = \"LOAD_USER_DATA\";\nexport function loadUserData(uid, userData) {\n  // add uid to the userData object\n  return { type: LOAD_USER_DATA, userData: { ...userData, uid: uid } };\n}\n\nexport const CLEAR_USER_DATA = \"CLEAR_USER_DATA\";\nexport function clearUserData() {\n  return { type: CLEAR_USER_DATA };\n}\n\nexport const LOAD_FAILURE = \"LOAD_FAILURE\";\nexport function loadFailure(err) {\n  return { type: LOAD_FAILURE, waiting: false, message: err };\n}\n\nexport const SET_DISPLAY_NAME = \"SET_DISPLAY_NAME\";\nexport function setDisplayName(displayName) {\n  return { type: SET_DISPLAY_NAME, value: displayName };\n}\n\nexport const REQUEST_DATA_UPLOAD = \"REQUEST_DATA_UPLOAD\";\nexport function requestDataUpload(packet) {\n  return { type: REQUEST_DATA_UPLOAD, packet: packet };\n}\n\nexport const REQUEST_PROGRAM_LOAD = \"REQUEST_PROGRAM_LOAD\";\nexport function requestProgramLoad(collection) {\n  return { type: REQUEST_PROGRAM_LOAD, programs: collection };\n}\n\nexport const PROGRAM_LOAD_FAILURE = \"PROGRAM_LOAD_FAILURE\";\nexport function programLoadFailure(error) {\n  return { type: PROGRAM_LOAD_FAILURE, error: error };\n}\n\nexport const PROGRAM_UPLOAD_SUCCESS = \"PROGRAM_UPLOAD_SUCCESS\";\nexport function programUploadSuccess() {\n  return { type: PROGRAM_UPLOAD_SUCCESS };\n}\n\nexport const PROGRAM_LOAD_SUCCESS = \"PROGRAM_LOAD_SUCCESS\";\nexport function programLoadSuccess() {\n  return { type: PROGRAM_LOAD_SUCCESS };\n}\n\nexport const PROGRAM_UPLOAD_FAILURE = \"PROGRAM_UPLOAD_FAILURE\";\nexport function programUploadFailure(error) {\n  return { type: PROGRAM_UPLOAD_FAILURE, message: error.message };\n}\n\nexport const SET_MOST_RECENT_PROGRAM = \"SET_MOST_RECENT_PROGRAM\";\nexport function setMostRecentProgram(program) {\n  return { type: SET_MOST_RECENT_PROGRAM, value: program };\n}\n\nexport const SET_PHOTO_NAME = \"SET_PHOTO_NAME\";\nexport function setPhotoName(photoName) {\n  return { type: SET_PHOTO_NAME, photoName: photoName };\n}\n\n// /**\n//  * dataUpload - attempts to upload program of data into firestore to persist it.\n//  * @param  {[type]} program - the program to upload\n//  * @param  {[type]} id     [description]\n//  * @return {[type]}        [description]\n//  */\n// export function programUpload(program, id){\n//   return (dispatch, getState) => {\n//     let program = getState().textEditor.editors.get(id).program\n//     let doc = progToDoc(program, getState().userData.programs)\n//     // if there is already a firestore document corresponding to this program, update it\n//     // otherwise, we need to create a new document remotely in firestore to store this data\n//     doc.get().then(function(docSnapshot){\n//       if(docSnapshot && docSnapshot.exists){\n//         dispatch(requestDataUpload(program))\n//         // merge: true makes it so that the document update is merged with any existing document data,\n//         // but the document the new data is merged into does not have to exist\n//         doc.set(Object.assign({}, program), {merge: true}).then(function(){\n//           dispatch(programUploadSuccess())\n//         }).catch(function(error){\n//           console.error(error.message)\n//           dispatch(programUploadFailure(error))\n//         })\n//       }\n//     })\n//   }\n// }\n\n// export function getMostRecentProgram(){\n//   return (dispatch, getState) => {\n//     let programs = getState().userData.programs\n//     //if for some reason we get no programs back, send back an invalid documnet\n//     if(!programs){\n//       return new Promise((resolve, reject) =>{\n//         resolve(new Program())\n//       })\n//     }\n//     return new Promise(async (resolve, reject) => {\n\n//       programs.orderBy(MODIFICATION_DATE, DESCENDING).limit(1).get().then((queryResult) => {\n//         if(queryResult && queryResult.docs[0]){\n//           let doc = queryResult.docs[0]\n//           resolve(new Program(doc))\n//         } else {\n//           resolve(new Program())\n//         }\n//       }).catch(function(err){\n//         reject(err)\n//       })\n//     })\n//   }\n// }\n","import Login from '../Login.js'\nimport {connect} from 'react-redux'\nimport {loadUserData, clearUserData, loadFailure} from '../../actions/userDataActions.js'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    loggedIn: state.userData,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadUserData: user => {\n      dispatch(loadUserData(user));\n    },\n    clearUserData: () => {\n      dispatch(clearUserData());\n    },\n    loadFailure: err => {\n      dispatch(loadFailure(err));\n    },\n  }\n}\n\nconst LoginPage = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login);\n\nexport default LoginPage;\n","//View Mode\nexport const CODE_AND_OUTPUT = 0;\nexport const CODE_ONLY = 1;\nexport const OUTPUT_ONLY = 2;\n\n//UI\nexport const EDITOR_WIDTH_BREAKPOINT = 1000;\n","import React from \"react\";\nimport \"styles/Radio.scss\";\n/**\n * Props\n *\n * options: (array of jsons) content for each box\n *          each json should look like {\n *            display: \"Text to be displayed\",\n *            (optional) value: the hidden value correlating to the display value (defaults to the index)\n *          }\n * defaultSelected: (same type as options' value key) the option that will be default selected\n *                   CAREFUL: if handleClick causes Radio to be re-rendered, make sure you're fine\n *                   with this variable always being the defaultSelected\n * containerStyle: (json) overrides the style on the outer container\n * optionStyle: (json) overrides the style on each individual option\n * selectedOptionStyle: (json) overrides the style on the selected option\n * bgColor: (string) color of the non selected options\n * color: (string) color of the non selected options text\n * selectedBgColor: (string) color of the selected option\n * selectedColor: (string) color of the selected options text\n * handleClick: (func) function to be called when an option is clicked\n *              should have 1 parameter (value) which is the value (from the options prop) that is selected (defaults to index)\n * allowMultipleSelected: (bool) if true, allows multiple options to be selected\n *                        changes handle click to be called with all selected values\n */\n\nexport default class Radio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let selected = this.props.defaultSelected;\n    if (this.props.allowMultipleSelected) {\n      selected = selected || [];\n    }\n\n    this.state = {\n      selected,\n    };\n  }\n\n  updateSelectedState = (selected, alreadySelected) => {\n    if (this.props.allowMultipleSelected) {\n      let newState = this.state.selected;\n      if (alreadySelected) {\n        let i = this.state.selected.indexOf(selected);\n        if (i >= 0) newState.splice(i, 1);\n      } else {\n        newState = this.state.selected.concat([selected]);\n      }\n      if (this.props.handleClick) {\n        this.props.handleClick(newState);\n      }\n      this.setState({ selected: newState });\n    } else {\n      if (this.props.handleClick) {\n        this.props.handleClick(selected);\n      }\n      this.setState({ selected });\n    }\n  };\n\n  renderOption = ({ display, value }, index) => {\n    //if no value is provided, use the index\n    value = value || index;\n\n    let isSelected =\n      value === this.state.selected ||\n      (this.props.allowMultipleSelected && this.state.selected.includes(value));\n    //attach -selected if the value matches the selected state\n    const className = \"radio-option\" + (isSelected ? \"-selected\" : \"\");\n    //add an id of radio-left if its the first option or radio-right if its the last option\n    const id =\n      index === 0 ? \"radio-left\" : index === this.props.options.length - 1 ? \"radio-right\" : \"\";\n\n    let optionStyle;\n    if (isSelected) {\n      optionStyle = Object.assign(\n        {},\n        this.props.optionStyle || {},\n        this.props.selectedOptionStyle || {},\n        this.props.selectedBgColor ? { backgroundColor: this.props.selectedBgColor } : {},\n        this.props.selectedColor ? { color: this.props.selectedColor } : {},\n      );\n    } else {\n      optionStyle = Object.assign(\n        {},\n        this.props.optionStyle || {},\n        this.props.bgColor ? { backgroundColor: this.props.bgColor } : {},\n        this.props.color ? { color: this.props.color } : {},\n      );\n    }\n\n    return (\n      <div\n        className={className}\n        onClick={() => this.updateSelectedState(value, isSelected)}\n        style={optionStyle}\n        id={id}\n        key={index}\n      >\n        {display}\n      </div>\n    );\n  };\n\n  render() {\n    const containerStyle = this.props.containerStyle;\n\n    let options = this.props.options || [];\n\n    return (\n      <div className=\"radio-selector\" style={containerStyle}>\n        {options.map(this.renderOption)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CODE_AND_OUTPUT, CODE_ONLY, OUTPUT_ONLY } from \"../constants\";\nimport Radio from \"../../common/Radio.js\";\n\n/**-------Props--------\n * runCode: function to be called when button is pressed\n */\nconst EditorRadio = props => {\n  let options = [];\n  if (!props.isSmall) options.push({ display: \"Both\", value: CODE_AND_OUTPUT });\n  options = options.concat([\n    { display: \"Code\", value: CODE_ONLY },\n    { display: \"Output\", value: OUTPUT_ONLY },\n  ]);\n\n  return (\n    <Radio\n      options={options}\n      defaultSelected={props.viewMode}\n      containerStyle={{ height: \"40px\" }}\n      handleClick={props.updateViewMode}\n    />\n  );\n};\n\nexport default EditorRadio;\n","import React from \"react\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n/**-------Props--------\n * panelOpen: boolean, is profile panel visible\n * togglePanel: function to call when you want the Profile Panel to disappear/reappear\n */\n\nconst OpenPanelButton = ({ panelOpen, togglePanel }) => {\n  //if the left panel is closed, show nothing\n  //otherwise show hamburger icon\n  if (panelOpen) {\n    return <div className=\"editor-expand-panel-arrow-hidden\" />;\n  } else {\n    return (\n      <div className=\"editor-expand-panel-arrow\" title=\"Open Profile Panel\" onClick={togglePanel}>\n        <FontAwesomeIcon icon={faBars} />\n      </div>\n    );\n  }\n};\n\nexport default OpenPanelButton;\n","export const SCREEN_RESIZE = \"SCREEN_RESIZE\";\nexport function screenResize(width, height) {\n  return { type: SCREEN_RESIZE, width, height };\n}\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\nexport function togglePanel() {\n  return { type: TOGGLE_PANEL };\n}\n\nexport const SET_PANEL = \"SET_PANEL\";\nexport function setPanel(value) {\n  return { type: SET_PANEL, value };\n}\n","import OpenPanelButton from \"../OpenPanelButton.js\";\nimport { connect } from \"react-redux\";\nimport { togglePanel } from \"../../../actions/uiActions.js\";\n\nconst mapStateToProps = state => {\n  return {\n    panelOpen: state.ui.panelOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    togglePanel: () => dispatch(togglePanel()),\n  };\n};\n\nconst OpenPanelButtonContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(OpenPanelButton);\n\nexport default OpenPanelButtonContainer;\n","import React from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPython } from \"@fortawesome/free-brands-svg-icons\";\nimport { faHtml5 } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n/**--------Props---------------\n * dropdownItems: array of strings, each string being the name of a Program\n * displayValue: string to be displayed as the placeholder for the dropdown\n * onSelect: function called when an item is selected in the dropdown\n */\n/**--------Optional props--------\n * defaultOpen: boolean determining if the dropdown should start off open or closed\n */\nexport default class DropdownButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: this.props.defaultOpen || false,\n    };\n  }\n\n  //==============React Lifecycle Functions===================//\n  componentDidMount() {}\n\n  toggleHandler = prevVal => {\n    this.setState({ dropdownOpen: !prevVal });\n  };\n\n  selectLanguage = program => {\n    let result = true;\n    if (this.props.dirty) {\n      result = window.confirm(\"Are you sure you want to change programs? You have unsaved changes\");\n    }\n\n    if (this.props.onSelect && result) {\n      this.props.onSelect(program);\n    }\n  };\n\n  renderDropdownItems = () => {\n    //map each program string in the array to a dropdown item\n    return this.props.dropdownItems.map(program => {\n      let faLanguage;\n      switch (program.language) {\n        case \"python\":\n          faLanguage = faPython;\n          break;\n        case \"processing\":\n          faLanguage = faCogs;\n          break;\n        case \"html\":\n        default:\n          faLanguage = faHtml5;\n      }\n      return (\n        <DropdownItem key={program.key} onClick={() => this.selectLanguage(program.key)}>\n          <FontAwesomeIcon icon={faLanguage} fixedWidth />\n          <span style={{ marginLeft: \"10px\" }}>{program.name}</span>\n        </DropdownItem>\n      );\n    });\n  };\n\n  render() {\n    // let value = this.props.displayValue\n    // if(this.props.dirty){\n    //   value = (<span>&#8226;{this.props.displayValue}</span>)\n    // }\n\n    let faLanguage;\n    switch (this.props.currentLanguage) {\n      case \"python\":\n        faLanguage = faPython;\n        break;\n      case \"processing\":\n        faLanguage = faCogs;\n        break;\n      case \"html\":\n      default:\n        faLanguage = faHtml5;\n    }\n\n    return (\n      <div className=\"editor-language-dropdown\">\n        <Dropdown\n          isOpen={this.state.dropdownOpen}\n          toggle={() => this.toggleHandler(this.state.dropdownOpen)}\n        >\n          {/* HACK: disables the colors entirely, makes the dropdown transparent */}\n          <DropdownToggle className=\"btn-language-dropdown\" color={\"\"} caret>\n            <div className=\"editor-language-dropdown-closed-content\">\n              <FontAwesomeIcon icon={faLanguage} fixedWidth /> {this.props.displayValue}\n            </div>\n          </DropdownToggle>\n          <DropdownMenu>{this.renderDropdownItems()}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport DropdownButton from \"../components/DropdownButton.js\";\nimport { setMostRecentProgram } from \"../../../actions/userDataActions.js\";\n\nconst mapStateToProps = state => {\n  const { mostRecentProgram } = state.userData;\n  let mostRecentLanguage = state.programs.getIn([mostRecentProgram, \"language\"], \"python\");\n  let displayValue = state.programs.getIn([mostRecentProgram, \"name\"], mostRecentProgram);\n\n  let listOfPrograms = state.programs.keySeq().map(id => {\n    return {\n      name: state.programs.getIn([id, \"name\"], id),\n      language: state.programs.getIn([id, \"language\"], \"python\"),\n      key: id,\n    };\n  });\n\n  const dirty = state.programs.getIn([mostRecentProgram, \"dirty\"], false);\n\n  return {\n    dirty,\n    dropdownItems: listOfPrograms,\n    displayValue,\n    currentLanguage: mostRecentLanguage,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelect: value => {\n      dispatch(setMostRecentProgram(value));\n    },\n  };\n};\n\nconst DropdownButtonContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DropdownButton);\n\nexport default DropdownButtonContainer;\n","const getProcessingSrcDocLoggingScript = code => `\n    <script type=\"text/javascript\">\n      if (typeof console  != \"undefined\")\n        if (typeof console.log != 'undefined')\n          console.olog = console.log;\n        else\n          console.olog = function() {};\n\n      console.log = (message) => {\n        console.olog(message);\n        let a = document.getElementById(\"inner\")\n        if(a){\n          // a.style.display = \"block\"\n          a.value = a.value + \"> \" + message + \"\\\\n\";\n          if(a.scrollTop >= (a.scrollHeight - a.offsetHeight) - a.offsetHeight){\n            a.scrollTop = a.scrollHeight\n          }\n        }\n      };\n\n      window.onerror = (err)=> {\n        let a = document.getElementById(\"outer\")\n        if(a){\n          a.style.display = \"block\"\n        }\n        console.log(\"\\\\n\\\\nERROR: \" + err + \"\\\\n\")\n      }\n\n      console.error = console.debug = console.info = console.log;\n\n      function closeConsole(){\n        var mypre = document.getElementById(\"inner\");\n        mypre.style.display = \"none\"\n      }\n    </script>\n  `;\n\nconst getUserScript = code => `\n  <script type=\"text/javascript\">\n    ${code}\n  </script>\n`;\n\nconst getProcessingSrcDocBody = (code, showConsole) => `\n    <body>\n      ${\n        showConsole\n          ? `<div id=\"outer\"><textarea id=\"inner\"></textarea></div>`\n          : `<div id=\"outer\" style=\"display:none;\"><textarea id=\"inner\"></textarea></div>`\n      }\n      ${getProcessingSrcDocLoggingScript(code)}\n      ${getUserScript(code)}\n    </body>\n  `;\n\nconst getProcessingSrcDocHead = () => `\n    <head>\n        <style>html,body: {margin:0, width:100%}</style>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.sound.min.js\"></script>\n        <style>\n          #inner {\n            height:100px;\n            background-color:#222;\n            color: #DDD;\n            font-family: monospace;\n            word-wrap:break-word;\n            overflow:auto;\n            margin: 10px auto;\n            position:relative;\n            padding: 10px 35px 10px 10px;\n            width: 100%;\n            box-sizing: border-box;         /* For IE and modern versions of Chrome */\n            -moz-box-sizing: border-box;    /* For Firefox                          */\n            -webkit-box-sizing: border-box; /* For Safari                           */\n          }\n          #output { margin: 0px 10px; display: block; position: relative;}\n          #closeConsoleButton { position: fixed; top: 20px; right: 30px; color: #ddd;}\n        </style>\n    </head>\n  `;\n\nexport default function(code, showConsole) {\n  return `<html> ${getProcessingSrcDocHead()} ${getProcessingSrcDocBody(code, showConsole)}</html>`;\n}\n","const getPythonSrcDocHead = () => `\n<head>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\" type=\"text/javascript\"></script>\n  <script src=\"https://cdn.rawgit.com/skulpt/skulpt-dist/0.11.0/skulpt.min.js\" type=\"text/javascript\"></script>\n  <script src=\"https://cdn.rawgit.com/skulpt/skulpt-dist/0.11.0/skulpt-stdlib.js\" type=\"text/javascript\"></script>\n  <style> html, body { margin:0; background-color: #585166;}\n          #inner {\n            height:100px;\n            background-color:#222;\n            color: #DDD;\n            font-family: monospace;\n            word-wrap:break-word;\n            overflow:auto;\n            margin: 10px auto;\n            position:relative;\n            padding: 10px 35px 10px 10px;\n            width: 100%;\n            box-sizing: border-box;         /* For IE and modern versions of Chrome */\n            -moz-box-sizing: border-box;    /* For Firefox                          */\n            -webkit-box-sizing: border-box; /* For Safari                           */\n            resize: vertical;\n          }\n          #output { margin: 0px 10px; position: relative;}\n          #mycanvas { margin: 10px; }\n          #closeConsoleButton { position: fixed; top: 20px; right: 30px; color: #ddd;}\n          canvas { border: 1px solid black; }\n  </style>\n</head>\n`;\n\nconst getPythonSrcDocSkulptScript = code => `\n  <script type=\"text/javascript\">\n    var received = false;\n    function outf(text) {\n        var mypre = document.getElementById(\"inner\");\n        console.log(text)\n        if (text != \"\\\\n\") {\n          received = true\n        } else if (received == true) {\n          received = false\n        } else {\n          received = true\n        }\n        if(received){\n          mypre.value = mypre.value + \"> \" + text + \"\\\\n\";\n        }\n        if(mypre.scrollTop >= (mypre.scrollHeight - mypre.offsetHeight) - mypre.offsetHeight){\n          mypre.scrollTop = mypre.scrollHeight\n        }\n    }\n\n    function closeConsole(){\n      var mypre = document.getElementById(\"inner\");\n      mypre.style.display = \"none\"\n    }\n\n    function builtinRead(x) {\n        if (Sk.builtinFiles === undefined || Sk.builtinFiles[\"files\"][x] === undefined)\n                throw \"File not found: '\" + x + \"'\";\n        return Sk.builtinFiles[\"files\"][x];\n    }\n\n    function runit() {\n        var prog = atob('${code}');\n        // console.log(prog)\n        //if you want to debug, you can uncomment this console log to see the code being run\n        //console.log(prog)\n        var mypre = document.getElementById(\"output\");\n        // mypre.innerHTML = '<div id=\"inner\"><div id=\"closeConsoleButton\" onclick=\"closeConsole()\" title=\"Hide Console\">X</div></div>';\n        mypre.innerHTML = '<textarea id=\"inner\" readonly></textarea>';\n        Sk.pre = \"output\";\n        Sk.configure({output:outf, read:builtinRead});\n        (Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';\n        var myPromise = Sk.misceval.asyncToPromise(function() {\n\n            return Sk.importMainWithBody(\"<stdin>\", false, prog, true);\n        });\n        myPromise.then(function(mod) {\n            //console.log('success');\n        },\n        function(err) {\n            console.log(err.toString());\n            let b = document.getElementById(\"output\")\n            if(b){\n              console.log(\"output found\")\n              b.style.display = \"block\"\n            }\n            let a = document.getElementById(\"inner\")\n            a.value += '\\\\nERROR: ' + err.toString() + \"\\\\n\"\n        });\n    }\n  </script>\n`;\n\nconst getPythonSrcDocBody = (code, showConsole) => {\n  return `\n    <body onload=\"runit()\">\n      ${getPythonSrcDocSkulptScript(code)}\n      ${showConsole ? `<div id=\"output\"> </div>` : `<div id=\"output\" style=\"display:none;\"> </div>`}\n      <div id=\"mycanvas\"></div>\n    </body>\n  `;\n};\n\nexport default function(code, showConsole) {\n  return `<html> ${getPythonSrcDocHead()} ${getPythonSrcDocBody(code, showConsole)} </html>`;\n}\n","import React from \"react\";\nimport { PYTHON, JAVASCRIPT, CPP, JAVA, HTML, PROCESSING } from \"../../../constants\";\nimport { OUTPUT_ONLY } from \"../constants\";\nimport EditorRadio from \"./EditorRadio\";\nimport OpenPanelButtonContainer from \"../../common/containers/OpenPanelButtonContainer\";\nimport DropdownButtonContainer from \"../containers/DropdownButtonContainer\";\nimport CreateProcessingDoc from \"./Output/Processing\";\nimport CreatePythonDoc from \"./Output/Python\";\n\nimport { Button } from \"reactstrap\";\n\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTerminal } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n/**--------Props--------\n * None\n */\n\nclass Output extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //used for the refresh button\n      counter: 0,\n      run: 0,\n      showConsole: true,\n    };\n    this.firstLoad = true;\n  }\n\n  //==============React Lifecycle Functions===================//\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state.showConsole !== nextState.showConsole) {\n      return true;\n    }\n\n    if (this.props.mostRecentProgram !== nextProps.mostRecentProgram) {\n      this.firstLoad = true;\n      return true;\n    }\n\n    if (\n      this.state.run !== nextState.run ||\n      this.state.counter !== nextState.counter ||\n      this.state.showConsole !== nextState.showConsole\n    ) {\n      this.firstLoad = false;\n      return true;\n    }\n    return false;\n  };\n\n  // a bit hacky, but we're re-rendering the output\n  // by updating the state in a novel way\n  reRenderOutput = () => {\n    this.setState(prevState => ({\n      counter: prevState.counter + 1,\n    }));\n  };\n\n  renderIframe = getSrcDoc => {\n    //check if getsrcdoc is a function\n    if (!getSrcDoc && {}.toString.call(getSrcDoc) === \"[object Function]\") {\n      console.log(\"Null src doc function found\");\n      return null;\n    }\n\n    return (\n      <iframe\n        id={this.state.counter + \" \" + this.state.run}\n        key={this.state.counter + \" \" + this.state.run}\n        className=\"editor-output-iframe\"\n        style={{ height: this.props.screenHeight - 61 + \"px\" }}\n        srcDoc={getSrcDoc()}\n        src=\"\"\n        title=\"output-iframe\"\n        onLoad={e => {\n          // console.log(e);\n        }}\n      />\n    );\n  };\n\n  renderOutput = () => {\n    let { language, runResult } = this.props;\n    const { showConsole } = this.state;\n\n    if (this.firstLoad) {\n      return null;\n    }\n\n    //if there's nothing to run, don't render an output\n    if (!runResult || !runResult.length) {\n      return null;\n    }\n\n    let srcDocFunc = () => runResult;\n\n    switch (language) {\n      case PROCESSING:\n        srcDocFunc = () => CreateProcessingDoc(runResult, showConsole);\n        break;\n      case PYTHON:\n        runResult = btoa(runResult);\n        srcDocFunc = () => CreatePythonDoc(runResult, showConsole);\n        break;\n      case JAVA:\n      case JAVASCRIPT:\n      case CPP:\n      case HTML:\n      default:\n        break;\n    }\n\n    return this.renderIframe(srcDocFunc);\n  };\n\n  renderOpenPanelButton = () => this.props.viewMode === OUTPUT_ONLY && <OpenPanelButtonContainer />;\n\n  renderLanguageDropdown = () => this.props.viewMode === OUTPUT_ONLY && <DropdownButtonContainer />;\n\n  renderRadio = () =>\n    this.props.viewMode === OUTPUT_ONLY && (\n      <div style={{ marginLeft: \"auto\" }}>\n        <EditorRadio\n          viewMode={this.props.viewMode}\n          updateViewMode={this.props.updateViewMode}\n          isSmall={this.props.isSmall}\n        />\n      </div>\n    );\n\n  toggleConsole = () => {\n    this.setState(prevState => {\n      return { showConsole: !prevState.showConsole };\n    });\n  };\n\n  renderConsoleButton = () => (\n    <Button\n      className=\"mx-2\"\n      color={this.state.showConsole ? \"danger\" : \"primary\"}\n      onClick={this.toggleConsole}\n      title={this.state.showConsole ? \"Hide Console\" : \"Show Console\"}\n      size=\"lg\"\n    >\n      <FontAwesomeIcon icon={faTerminal} />\n    </Button>\n  );\n\n  renderBanner = () => (\n    <div className=\"editor-output-banner\">\n      {this.renderOpenPanelButton()}\n      {this.renderLanguageDropdown()}\n      <div style={{ flex: \"1 1 auto\" }}> </div> {/*whitespace*/}\n      {this.renderRadio()}\n      {this.renderConsoleButton()}\n      <Button className=\"mx-2\" color=\"primary\" size=\"lg\" onClick={this.runCode}>\n        <FontAwesomeIcon icon={faPlay} />\n        &nbsp;&nbsp;Run\n      </Button>\n    </div>\n  );\n\n  runCode = () => {\n    this.setState(prevState => ({\n      run: prevState.run + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"editor-output\">\n        {this.renderBanner()}\n        <div>{this.renderOutput()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import { connect } from \"react-redux\";\nimport Output from \"../components/Output.js\";\n\nconst mapStateToProps = state => {\n  const { mostRecentProgram } = state.userData;\n  return {\n    mostRecentProgram,\n    runResult: state.programs.getIn([mostRecentProgram, \"code\"]),\n    language: state.programs.getIn([mostRecentProgram, \"language\"]),\n    screenHeight: state.ui.screenHeight,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearOutput: () => {},\n  };\n};\n\nconst OutputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Output);\n\nexport default OutputContainer;\n","import constants from \"../constants\";\n\n/**---------getUserData--------\n * fetches object from server containg information about user at uid\n * includes users' programs in json if includePrograms is true\n * returned json will be of the form\n * {\n *   ok:    boolean that's true if no error occured in the server\n *   data:{\n *    userData: json of the users data such as displayName, photoURL, mostRecentProgram, etc.\n *    programs: json of each program\n *          each program is keyed by the program name and its value is a json containing at\n *          two keys. code is the code and language is the language the code is written in\n *   }\n * }\n */\nexport const getUserData = async (uid = \"\", includePrograms = false) => {\n  const getUserDataEndpoint = (uid = \"\", includePrograms = false) =>\n    `${constants.SERVER_URL}/getUserData/${uid}${includePrograms ? \"?programs=true\" : \"\"}`;\n\n  const options = {\n    method: \"get\",\n    mode: \"cors\", // no-cors, cors, *same-origin\n  };\n\n  try {\n    let result = await fetch(getUserDataEndpoint(uid, includePrograms), options);\n    let { ok, data, error } = await result.json();\n\n    return { ok, data, error };\n  } catch (err) {\n    return { ok: \"false\", error: \"SERVER ERROR: Unable to get user data from server\", err: err };\n  }\n};\n\n/**---------updatePrograms--------\n * updates all programs provided in the parameter \"programs\"\n *\n * programs should be a json with at least 1 key in it\n * each key should be the name of the program you want to update\n * and the value should be the json you want merged with the document in Firestore\n *\n * e.g.\n * programs = {\n *  Python:{code: \"test\"}\n * }\n * would update the code for the Python program, but not the language\n * }\n */\nexport const updatePrograms = (uid = \"\", programs) => {\n  const updateProgramsEndpoint = (uid = \"\") => `${constants.SERVER_URL}/updatePrograms/${uid}`;\n\n  let body = \"\";\n\n  try {\n    //if programs is an object with at least 1 key, set the body to the stringified programs object\n    if (Object.keys(programs).length) {\n      body = JSON.stringify(programs);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  //TODO: update this so it doesn't send OPTIONS bc of cors\n  const options = {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  };\n\n  return fetch(updateProgramsEndpoint(uid), options);\n};\n\n/**---------updateUserData--------\n * merges the json parameter userData with the user document in Firestore\n *\n * e.g.\n * userData = {\n *  photoURL:\"google.com/asdf.jpeg\"\n * }\n * would update the photoURL of the user at uid, but not their mostRecentProgram\n * }\n */\nexport const updateUserData = (uid = \"\", userData) => {\n  const updateUserDataEndpoint = (uid = \"\") => `${constants.SERVER_URL}/updateUserData/${uid}`;\n\n  let body = \"\";\n\n  try {\n    //if programs is an object with at least 1 key, set the body to the stringified programs object\n    if (Object.keys(userData).length) {\n      body = JSON.stringify(userData);\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n\n  const options = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n    body,\n  };\n\n  return fetch(updateUserDataEndpoint(uid), options);\n};\n\nexport const createSketch = data => {\n  let body = \"\";\n\n  try {\n    //if programs is an object with at least 1 key, set the body to the stringified programs object\n    if (Object.keys(data).length) {\n      body = JSON.stringify(data);\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n\n  const options = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n    body,\n  };\n\n  return fetch(`${constants.SERVER_URL}/createProgram`, options);\n};\n\nexport const deleteSketch = data => {\n  let body = \"\";\n\n  try {\n    //if programs is an object with at least 1 key, set the body to the stringified programs object\n    if (Object.keys(data).length) {\n      body = JSON.stringify(data);\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n\n  const options = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n    body,\n  };\n  return fetch(`${constants.SERVER_URL}/deleteProgram`, options);\n};\n","import React from \"react\";\nimport { CODEMIRROR_CONVERSIONS } from \"../../../constants\";\nimport * as fetch from \"../../../lib/fetch.js\";\n\nlet CodeMirror = null;\nif (typeof window !== \"undefined\" && typeof window.navigator !== \"undefined\") {\n  // import {Controlled as CodeMirror} from 'react-codemirror2'\n  CodeMirror = require(\"react-codemirror2\").Controlled;\n  require(\"codemirror/mode/javascript/javascript.js\");\n  require(\"codemirror/mode/htmlmixed/htmlmixed.js\");\n  require(\"codemirror/mode/python/python.js\");\n  require(\"codemirror/mode/clike/clike.js\");\n}\n/**----------Props--------\n * None\n */\n\nclass TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      codeMirrorInstance: null,\n      currentLine: 0,\n    };\n  }\n\n  //==============React Lifecycle Functions===================//\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.onLeave);\n    window.addEventListener(\"close\", this.onLeave);\n  }\n\n  componentWillUpdate() {}\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"beforeunload\", this.onLeave);\n    window.removeEventListener(\"close\", this.onLeave);\n  };\n\n  checkDirty = async () => {\n    if (!this.props.dirty) {\n      return;\n    }\n\n    try {\n      let programToUpdate = {};\n      programToUpdate[this.props.mostRecentProgram] = {\n        code: this.props.code,\n      };\n\n      await fetch.updatePrograms(this.props.uid, programToUpdate);\n      //TODO: add functionality to be able to tell whether the fetch failed\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  onLeave = async ev => {\n    if (this.props.dirty) {\n      ev.returnValue = \"\";\n    }\n    return ev;\n  };\n\n  setCodeMirrorInstance = codeMirrorInstance => {\n    this.setState({ codeMirrorInstance });\n  };\n\n  updateCode = (editor, data, newCode) => {\n    //if the code's not yet dirty, and the old code is different from the new code, make it dirty\n    if (!this.props.dirty && this.props.code !== newCode) {\n      this.props.dirtyCode(this.props.mostRecentProgram);\n    }\n    this.props.setProgramCode(this.props.mostRecentProgram, newCode);\n  };\n\n  setCurrentLine = cm => {\n    const { codeMirrorInstance, currentLine } = this.state;\n    let { line } = cm.getCursor();\n    if (codeMirrorInstance) {\n      //removeLineClass removes the back highlight style from the last selected line\n      codeMirrorInstance.removeLineClass(currentLine, \"wrap\", \"selected-line\");\n      //addLineClass adds the style to the newly selected line\n      codeMirrorInstance.addLineClass(line, \"wrap\", \"selected-line\");\n    }\n    this.setState({ currentLine: line });\n  };\n\n  render() {\n    //json required by CodeMirror\n    const options = {\n      mode: CODEMIRROR_CONVERSIONS[this.props.language],\n      theme: \"material\", //requires lots of CSS tuning to get a theme to work, be wary of changing\n      lineNumbers: true, //text editor has line numbers\n      lineWrapping: true, //text editor does not overflow in the x direction, uses word wrap (NOTE: it's like MO Word wrapping, so words are not cut in the middle, if a word overlaps, the whole word is brought to the next line)\n      indentWithTabs: true,\n    };\n\n    return (\n      <CodeMirror\n        editorDidMount={codeMirrorInstance => {\n          codeMirrorInstance.refresh();\n          this.setCodeMirrorInstance(codeMirrorInstance);\n        }}\n        value={this.props.code}\n        lineWrapping\n        indentWithTabs={true}\n        options={options}\n        onCursor={cm => {\n          this.setCurrentLine(cm);\n        }}\n        onBeforeChange={this.updateCode}\n        onChange={this.updateCode}\n      />\n    );\n  }\n}\n\nexport default TextEditor;\n","export const SET_PROGRAM_CODE = \"SET_PROGRAM_CODE\";\nexport function setProgramCode(program, value) {\n  return { type: SET_PROGRAM_CODE, program, value };\n}\n\nexport const SET_PROGRAM_LANGUAGE = \"SET_PROGRAM_LANGUAGE\";\nexport function setProgramLanguage(program, value) {\n  return { type: SET_PROGRAM_LANGUAGE, program, value };\n}\n\nexport const SET_PROGRAM_NAME = \"SET_PROGRAM_NAME\";\nexport function setProgramName(program, value) {\n  return { type: SET_PROGRAM_NAME, program, value };\n}\n\nexport const SET_PROGRAM_THUMBNAIL = \"SET_PROGRAM_THUMBNAIL\";\nexport function setProgramThumbnail(program, value) {\n  return { type: SET_PROGRAM_THUMBNAIL, program, value };\n}\n\nexport const DELETE_PROGRAM = \"DELETE_PROGRAM\";\nexport function deleteProgram(program) {\n  return { type: DELETE_PROGRAM, program };\n}\n\nexport const LOAD_PROGRAMS = \"LOAD_PROGRAMS\";\nexport function loadPrograms(programs) {\n  return { type: LOAD_PROGRAMS, programs };\n}\n\nexport const CLEAR_PROGRAMS = \"CLEAR_PROGRAMS\";\nexport function clearPrograms() {\n  return { type: CLEAR_PROGRAMS };\n}\n\nexport const SET_PROGRAM_DIRTY = \"SET_PROGRAM_DIRTY\";\nexport function setProgramDirty(program, value) {\n  return { type: SET_PROGRAM_DIRTY, program, value };\n}\n\nexport const ADD_PROGRAM = \"ADD_PROGRAM\";\nexport function addProgram(program, data) {\n  return { type: ADD_PROGRAM, program, data };\n}\n","import Immutable from \"immutable\";\nimport TextEditor from \"../components/TextEditor\";\nimport { connect } from \"react-redux\";\nimport { setProgramCode, setProgramDirty } from \"../../../actions/programsActions.js\";\n\nconst mapStateToProps = state => {\n  const { uid, mostRecentProgram } = state.userData;\n\n  //program data should be an object representing the most recent program\n  //should have 2 keys, code (which is the code) and langauge (which is the language the code is written it)\n  // add key dirty\n  const programData = state.programs.get(mostRecentProgram, Immutable.Map()).toJS();\n\n  return {\n    ...programData,\n    mostRecentProgram,\n    uid,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setProgramCode: (program, code) => {\n      dispatch(setProgramCode(program, code));\n    },\n    dirtyCode: program => {\n      dispatch(setProgramDirty(program, true));\n    },\n  };\n};\n\nconst TextEditorContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TextEditor);\n\nexport default TextEditorContainer;\n","import React from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport { Button } from \"reactstrap\";\nimport OutputContainer from \"./containers/OutputContainer.js\";\nimport TextEditorContainer from \"./containers/TextEditorContainer\";\nimport DropdownButtonContainer from \"./containers/DropdownButtonContainer\";\nimport OpenPanelButtonContainer from \"../common/containers/OpenPanelButtonContainer\";\nimport * as fetch from \"../../lib/fetch.js\";\nimport EditorRadio from \"./components/EditorRadio.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { EDITOR_WIDTH_BREAKPOINT, CODE_AND_OUTPUT, CODE_ONLY, OUTPUT_ONLY } from \"./constants\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { PANEL_SIZE } from \"../../constants\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"styles/CustomCM.scss\";\nimport \"styles/Resizer.scss\";\nimport \"styles/Editor.scss\";\n\n/**------Props-------\n * togglePanel: function to call when you want the Profile Panel to disappear/reapper\n * panelOpen: boolean telling whether the Profile Panel is open or not\n * left: the left css property that should be applied on the top level element\n */\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saveText: \"Save\",\n      viewMode: CODE_AND_OUTPUT,\n      redirect: \"\",\n      pane1Style: { transition: \"width .5s ease\" },\n    };\n  }\n\n  //==============React Lifecycle Functions Start===================//\n  componentWillMount() {\n    if (this.props.screenWidth <= EDITOR_WIDTH_BREAKPOINT) {\n      this.setState({ viewMode: CODE_ONLY });\n    }\n    if (this.props.listOfPrograms.length === 0) {\n      this.setState({ redirect: \"/sketches\" });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.screenWidth !== prevProps.screenWidth) {\n      if (this.props.screenWidth <= EDITOR_WIDTH_BREAKPOINT) {\n        if (this.state.viewMode === CODE_AND_OUTPUT) {\n          this.setState({ viewMode: CODE_ONLY });\n        }\n      }\n    }\n  }\n\n  resetSaveText = () => {\n    this.setState({\n      saveText: \"Save\",\n    });\n  };\n\n  handleSave = event => {\n    if (!this.props.dirty) return; // Don't save if not dirty (unedited)\n    this.setState({\n      saveText: \"Saving...\",\n    });\n\n    let programToUpdate = {};\n\n    programToUpdate[this.props.mostRecentProgram] = {\n      code: this.props.code,\n    };\n\n    fetch.updatePrograms(this.props.uid, programToUpdate).then(() => {\n      this.setState({\n        saveText: \"Saved!\",\n      });\n\n      setTimeout(this.resetSaveText, 3000);\n    });\n    this.props.cleanCode(this.props.mostRecentProgram); // Set code's \"dirty\" state to false\n  };\n\n  renderDropdown = () => <DropdownButtonContainer />;\n\n  renderCodeAndOutput = () => (\n    <SplitPane\n      resizerStyle={{\n        height: \"67px\",\n        borderLeft: \"2px solid #333\",\n        borderRight: \"2px solid #333\",\n        width: \"10px\",\n      }}\n      pane1Style={this.state.pane1Style}\n      //functions called when you start and finish a drag\n      //removes and re-addsthe transition effect on the first panel when manually resizing\n      onDragStarted={() => this.setState({ pane1Style: {} })}\n      onDragFinished={() => this.setState({ pane1Style: { transition: \"width .5s ease\" } })}\n      split=\"vertical\" //the resizer is a vertical line (horizontal means resizer is a horizontal bar)\n      minSize={\n        (this.props.panelOpen ? this.props.screenWidth - PANEL_SIZE : this.props.screenWidth) * 0.33\n      } //minimum size of code is 33% of the remaining screen size\n      maxSize={\n        (this.props.panelOpen ? this.props.screenWidth - PANEL_SIZE : this.props.screenWidth) * 0.75\n      } //max size of code is 75% of the remaining screen size\n      size={\n        (this.props.panelOpen ? this.props.screenWidth - PANEL_SIZE : this.props.screenWidth) / 2\n      } //the initial size of the text editor section\n      allowResize={true}\n    >\n      {this.renderCode()}\n      {this.renderOutput()}\n    </SplitPane>\n  );\n\n  updateViewMode = viewMode => {\n    this.setState({ viewMode });\n  };\n\n  renderCode = () => (\n    <div className=\"code-section\">\n      <div className=\"code-section-banner\">\n        <OpenPanelButtonContainer />\n        {this.renderDropdown()}\n        <div style={{ marginLeft: \"auto\" }}>\n          <EditorRadio\n            viewMode={this.state.viewMode}\n            updateViewMode={this.updateViewMode}\n            isSmall={this.props.screenWidth <= EDITOR_WIDTH_BREAKPOINT}\n          />\n        </div>\n        <Button className=\"mx-2\" color=\"success\" size=\"lg\" onClick={this.handleSave}>\n          <FontAwesomeIcon icon={faSave} />\n          &nbsp;&nbsp;{this.state.saveText}\n        </Button>\n      </div>\n      <div\n        className=\"text-editor-container\"\n        style={{\n          height: this.props.screenHeight - 61 - 20,\n          minHeight: this.props.screenHeight - 61 - 20,\n          maxHeight: this.props.screenHeight - 61 - 20,\n        }}\n      >\n        <TextEditorContainer key={this.props.mostRecentProgram} />\n      </div>\n    </div>\n  );\n\n  renderOutput = () => (\n    <OutputContainer\n      viewMode={this.state.viewMode}\n      updateViewMode={this.updateViewMode}\n      isSmall={this.props.screenWidth <= EDITOR_WIDTH_BREAKPOINT}\n    />\n  );\n\n  renderContent = () => {\n    const codeStyle = {\n      width: this.props.screenWidth - (this.props.left || 0),\n      height: this.props.screenHeight,\n    };\n\n    switch (this.state.viewMode) {\n      case CODE_ONLY:\n        return <div style={codeStyle}>{this.renderCode()}</div>;\n      case OUTPUT_ONLY:\n        return <div style={codeStyle}>{this.renderOutput()}</div>;\n      default:\n        return this.renderCodeAndOutput();\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n\n    const codeStyle = {\n      left: this.props.left || 0,\n      width: this.props.screenWidth - (this.props.left || 0),\n      height: this.props.screenHeight,\n    };\n\n    return (\n      <div className=\"editor\" style={codeStyle}>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","export const CLEAR_OUTPUT = \"CLEAR_OUTPUT\";\nexport function clearOutput() {\n  return { type: CLEAR_OUTPUT };\n}\n\nexport const SET_RUN_RESULT = 'SET_RUN_RESULT'\nexport function setRunResult(value){\n  return {type: SET_RUN_RESULT, value}\n}\n\nexport const SET_OUTPUT_LANGUAGE = 'SET_OUTPUT_LANGAUGE'\nexport function setOutputLanguage(value){\n  return {type: SET_OUTPUT_LANGUAGE, value}\n}\n\nexport const SET_OUTPUT = 'SET_OUTPUT'\nexport function setOutput({output}){\n  //if output is not an object\n  if(!output){\n    return {type:\"IGNORE\"}\n  }\n  return {type:SET_OUTPUT, runResult:output.code, language: output.language}\n}","import Editor from \"../index.js\";\nimport { connect } from \"react-redux\";\nimport { setOutput } from \"../../../actions/outputActions.js\";\nimport { setMostRecentProgram } from \"../../../actions/userDataActions.js\";\nimport { setProgramDirty } from \"../../../actions/programsActions.js\";\nimport { togglePanel } from \"../../../actions/uiActions.js\";\nimport { CLOSED_PANEL_LEFT, OPEN_PANEL_LEFT, PANEL_SIZE } from \"../../../constants\";\n\nconst mapStateToProps = state => {\n  const { mostRecentProgram } = state.userData;\n\n  //program data should be an object representing the most recent program\n  //should have 2 keys, code (which is the code) and langauge (which is the language the code is written it)\n  const code = state.programs.getIn([mostRecentProgram, \"code\"], undefined);\n  const dirty = state.programs.getIn([mostRecentProgram, \"dirty\"], false);\n\n  let listOfPrograms = [];\n\n  state.programs.keySeq().forEach(key => listOfPrograms.push(key));\n\n  return {\n    uid: state.userData.uid,\n    mostRecentProgram,\n    code,\n    listOfPrograms,\n    screenWidth: state.ui.screenWidth,\n    screenHeight: state.ui.screenHeight,\n    dirty,\n    panelOpen: state.ui.panelOpen,\n    left: (state.ui.panelOpen ? OPEN_PANEL_LEFT : CLOSED_PANEL_LEFT) + PANEL_SIZE,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMostRecentProgram: value => dispatch(setMostRecentProgram(value)),\n    runCode: (code, language) => dispatch(setOutput(code, language)),\n    cleanCode: program => dispatch(setProgramDirty(program, false)),\n    togglePanel: () => dispatch(togglePanel()),\n  };\n};\n\nconst EditorContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Editor);\n\nexport default EditorContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/SketchBox.scss\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass SketchBox extends React.Component {\n  render() {\n    return (\n      <div className=\"sketch-box\">\n        <Link\n          className=\"sketch-box-body\"\n          onClick={this.props.redirFunc}\n          to={{ pathname: \"/editor\" }}\n        >\n          <img\n            alt={\"User's sketch icon\"}\n            src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${this.props.img}.svg`}\n            className=\"sketch-thumbnail mt-2\"\n          />\n          <div className=\"sketch-metadata\">\n            <b className=\"sketch-name\">{this.props.name}</b>\n            <FontAwesomeIcon className=\"sketch-icon\" icon={this.props.icon} />\n          </div>\n        </Link>\n        <hr className=\"sketch-divider\" />\n        <Row className=\"sketch-box-body\">\n          <Col className=\"p-2 text-center\" onClick={this.props.editFunc}>\n            <FontAwesomeIcon className=\"fa-lg\" icon={faEdit} />\n          </Col>\n          <div className=\"sketch-button-divider\" />\n          <Col className=\"p-2 text-center\" onClick={this.props.downloadFunc}>\n            <FontAwesomeIcon className=\"fa-lg\" icon={faDownload} />\n          </Col>\n          <div className=\"sketch-button-divider\" />\n          <Col className=\"p-2 text-center\" onClick={this.props.deleteFunc}>\n            <FontAwesomeIcon className=\"fa-lg\" icon={faTrashAlt} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SketchBox;\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport * as fetch from \"../../../lib/fetch.js\";\n\nclass ConfirmDeleteModal extends React.Component {\n  componentWillMount() {}\n  componentDidUpdate() {}\n\n  closeModal = () => {\n    if (this.props.onClose && {}.toString.call(this.props.onClose) === \"[object Function]\") {\n      this.props.onClose();\n    }\n  };\n\n  onDeleteSubmit = () => {\n    let data = {\n      uid: this.props.uid,\n      docID: this.props.sketchKey,\n      name: this.props.sketchKey,\n    };\n    try {\n      fetch\n        .deleteSketch(data)\n        .then(res => {\n          return res.json();\n        })\n        .then(json => {\n          if (!json.ok) {\n            this.setState({\n              spinner: false,\n              error: json.error || \"Failed to create sketch, please try again later\",\n            });\n            return;\n          }\n          this.props.deleteProgram(this.props.sketchKey);\n          this.closeModal();\n        })\n        .catch(err => {\n          this.setState({\n            spinner: false,\n            error: \"Failed to create sketch, please try again later\",\n          });\n          console.log(err);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    this.setState({ spinner: true, error: \"\" });\n  };\n\n  render() {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.closeModal}\n        className=\"sketches-modal\"\n        ariaHideApp={false}\n      >\n        <Container>\n          <h2 className=\"text-center\">\n            Are you sure you want to delete \"{this.props.sketchName}\"?\n          </h2>\n          <hr />\n          <Row>\n            <Col>\n              <Button color=\"secondary\" onClick={this.closeModal} size=\"lg\" block>\n                No thanks!\n              </Button>\n            </Col>\n            <Col>\n              <Button color=\"danger\" onClick={this.onDeleteSubmit} size=\"lg\" block>\n                Delete Forever!\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </ReactModal>\n    );\n  }\n}\n\nexport default ConfirmDeleteModal;\n","import ConfirmDeleteModal from \"../components/ConfirmDeleteModal.js\";\nimport { connect } from \"react-redux\";\nimport { deleteProgram } from \"../../../actions/programsActions\";\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.userData.uid,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteProgram: (program, data) => dispatch(deleteProgram(program, data)),\n  };\n};\n\nconst ConfirmDeleteModalContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ConfirmDeleteModal);\n\nexport default ConfirmDeleteModalContainer;\n","import React from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\n\n/**--------Props---------------\n * dropdownItems: array of strings, each string being the name of a Program\n * displayValue: string to be displayed as the placeholder for the dropdown\n * onSelect: function called when an item is selected in the dropdown\n */\n/**--------Optional props--------\n * defaultOpen: boolean determining if the dropdown should start off open or closed\n */\n\nexport default class DropdownButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: this.props.defaultOpen || false,\n    };\n  }\n\n  //==============React Lifecycle Functions===================//\n  componentDidMount() {}\n\n  toggleHandler = prevVal => {\n    this.setState({ dropdownOpen: !prevVal });\n  };\n\n  renderDropdownItems = () => {\n    //map each program string in the array to a dropdown item\n    return this.props.dropdownItems.map(({ display, value }) => {\n      //if the program doesn't exist, or is an empty string, return null\n      if (!display || !display.length || !value || !value.length) {\n        return null;\n      }\n\n      return (\n        <DropdownItem\n          key={value}\n          onClick={this.props.onSelect ? () => this.props.onSelect({ display, value }) : null}\n        >\n          {display}\n        </DropdownItem>\n      );\n    });\n  };\n\n  render() {\n    //if there's no programs in the dropdownItems, just show the display value\n    if (!this.props.dropdownItems || !this.props.dropdownItems.length) {\n      //TODO: add better error logic for this\n      return this.props.displayValue;\n    }\n\n    return (\n      <div className=\"sketches-language-dropdown\">\n        <Dropdown\n          isOpen={this.state.dropdownOpen}\n          toggle={() => this.toggleHandler(this.state.dropdownOpen)}\n        >\n          <DropdownToggle color=\"primary\" size=\"lg\" caret>\n            <div className=\"sketches-language-dropdown-closed-content\">\n              {this.props.displayValue}\n            </div>\n          </DropdownToggle>\n          <DropdownMenu>{this.renderDropdownItems()}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DropdownButton from \"./DropdownButton\";\nimport {\n  SketchThumbnailArray,\n  LanguageDropdownValues,\n  LanguageDropdownDefault,\n} from \"../constants\";\nimport * as fetch from \"../../../lib/fetch.js\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Button, Container, Row, Col, FormGroup, Label, Input } from \"reactstrap\";\n\nimport ReactModal from \"react-modal\";\n\nimport \"styles/SketchesModal.scss\";\n\nclass CreateSketchModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: LanguageDropdownDefault,\n      name: \"\",\n      next: false,\n      thumbnail: -1,\n      disableSubmit: false,\n      error: \"\",\n      redirect: false,\n    };\n  }\n\n  //==============React Lifecycle Functions Start===================//\n  componentWillMount() {}\n\n  componentDidUpdate() {}\n\n  closeModal = () => {\n    if (this.props.onClose && {}.toString.call(this.props.onClose) === \"[object Function]\") {\n      this.props.onClose();\n    }\n\n    this.setState({\n      next: false,\n      language: LanguageDropdownDefault,\n      name: \"\",\n      thumbnail: -1,\n      error: \"\",\n      disableSubmit: false,\n    });\n  };\n\n  setNext = val => {\n    this.setState({\n      next: val,\n      error: \"\",\n      disableSubmit: false,\n    });\n  };\n\n  onBack = () => this.setNext(false);\n\n  badThumbnailInput = () => {\n    if (\n      this.state.thumbnail === undefined ||\n      this.state.thumbnail === \"\" ||\n      this.state.thumbnail >= SketchThumbnailArray.length ||\n      this.state.thumbnail < 0\n    ) {\n      // this.setState({error: \"Please select a thumbnail\"})\n      return true;\n    }\n\n    return false;\n  };\n\n  badNameInput = () => {\n    if (!this.state.name) {\n      this.setState({ error: \"Name is required\" });\n      return true;\n    }\n    if (this.state.name.length > 15) {\n      this.setState({ error: \"Name must be 15 characters or less\" });\n      return true;\n    }\n    // if( this.state.name.match(/[^a-zA-Z0-9!@#$%'\" .]/)){\n    //   this.setState({error: \"Sketch name nust be less than 20 characters\"})\n    //   return true\n    // }\n\n    return false;\n  };\n\n  badLanguageInput = () => {\n    if (!this.state.language) {\n      this.setState({ error: \"Please select a language\" });\n      return true;\n    }\n\n    let notFound = true;\n    for (var i = 0; i < LanguageDropdownValues.length; i++) {\n      if (\n        this.state.language.display === LanguageDropdownValues[i].display &&\n        this.state.language.value === LanguageDropdownValues[i].value\n      ) {\n        notFound = false;\n        break;\n      }\n    }\n    if (notFound) {\n      this.setState({ error: \"Invalid language selected\" });\n      return true;\n    }\n\n    return false;\n  };\n\n  onFirstSubmit = e => {\n    e.preventDefault();\n    if (this.badNameInput() || this.badLanguageInput()) {\n      return;\n    }\n    this.setNext(true);\n  };\n\n  onSecondSubmit = async e => {\n    e.preventDefault();\n\n    if (this.badThumbnailInput()) return;\n\n    let data = {\n      uid: this.props.uid,\n      thumbnail: this.state.thumbnail,\n      language: this.state.language.value,\n      name: this.state.name,\n      code: \"\",\n    };\n\n    try {\n      fetch\n        .createSketch(data)\n        .then(res => {\n          return res.json();\n        })\n        .then(json => {\n          if (!json.ok) {\n            this.setState({\n              disableSubmit: false,\n              error: json.error || \"Failed to create sketch, please try again later\",\n            });\n            return;\n          }\n          this.props.addProgram(json.data.key, json.data.programData || {});\n          this.props.setMostRecentProgram(json.data.key);\n          this.setState({ redirect: true });\n          this.closeModal();\n        })\n        .catch(err => {\n          this.setState({\n            disableSubmit: false,\n            error: \"Failed to create sketch, please try again later\",\n          });\n          console.log(err);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    this.setState({ disableSubmit: true, error: \"\" });\n  };\n\n  renderSecondModal = () => {\n    let icons = SketchThumbnailArray.map((val, index) => {\n      return (\n        <figure\n          className=\"sketches-gallery-item\"\n          key={val}\n          onClick={() => this.setState({ thumbnail: index })}\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${val}.svg`}\n            className={\"sketches-gallery-img\" + (this.state.thumbnail === index ? \"-selected\" : \"\")}\n            alt=\"icon\"\n          />\n        </figure>\n      );\n    });\n\n    let thumbnailPreview =\n      this.state.thumbnail !== -1 ? (\n        <img\n          src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${\n            SketchThumbnailArray[this.state.thumbnail]\n          }.svg`}\n          className={\"sketches-modal-header-thumbnail\"}\n          alt=\"icon\"\n        />\n      ) : null;\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.closeModal}\n        className=\"sketches-image-modal\"\n        overlayClassName=\"profile-image-overlay\"\n        ariaHideApp={false}\n      >\n        <Container>\n          <div className=\"sketches-modal-header d-flex align-items-center\">\n            <h1>Choose a thumbnail</h1>\n            <div className=\"sketches-modal-header-thumbnail-container\">{thumbnailPreview}</div>\n          </div>\n          <hr />\n          <div className=\"sketches-gallery\">{icons}</div>\n          <br />\n          <div className=\"text-center text-danger\">{this.state.error || <br />}</div>\n          <hr />\n          <Row>\n            <Col>\n              <Button\n                color=\"secondary\"\n                onClick={this.onBack}\n                disabled={this.state.disableSubmit}\n                size=\"lg\"\n                block\n              >\n                Back\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                color=\"success\"\n                onClick={this.onSecondSubmit}\n                size=\"lg\"\n                disabled={this.badThumbnailInput() || this.state.disableSubmit}\n                block\n              >\n                Create\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </ReactModal>\n    );\n  };\n\n  renderFirstModal = () => {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.closeModal}\n        className=\"sketches-modal\"\n        overlayClassName=\"profile-image-overlay\"\n        ariaHideApp={false}\n      >\n        <Container>\n          <h1 className=\"text-center\">Create a Sketch</h1>\n          <hr />\n          <FormGroup row>\n            <Label className=\"text-right\" for=\"sketch-name\" xs={4}>\n              Name\n            </Label>\n            <Col xs={8}>\n              <Input\n                onChange={e => this.setState({ name: e.target.value })}\n                value={this.state.name}\n                id=\"sketch-name\"\n              />\n            </Col>\n          </FormGroup>\n          <br />\n          <Row>\n            <Col xs=\"4\" className=\"text-right\">\n              Language\n            </Col>\n            <Col xs=\"8\" className=\"d-flex align-items-center\">\n              <DropdownButton\n                dropdownItems={LanguageDropdownValues}\n                onSelect={lang => this.setState({ language: lang })}\n                displayValue={this.state.language.display || LanguageDropdownDefault.display}\n              />\n            </Col>\n          </Row>\n          <br />\n          <div className=\"text-center text-danger\">{this.state.error || <br />}</div>\n          <hr />\n          <Row>\n            <Col>\n              <Button color=\"danger\" onClick={this.closeModal} size=\"lg\" block>\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button color=\"success\" onClick={this.onFirstSubmit} size=\"lg\" block>\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </ReactModal>\n    );\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/editor\" />;\n    }\n\n    if (this.state.next) {\n      return this.renderSecondModal();\n    }\n\n    return this.renderFirstModal();\n  }\n}\n\nexport default CreateSketchModal;\n","import CreateSketchModal from \"../components/CreateSketchModal.js\";\nimport { connect } from \"react-redux\";\nimport { addProgram } from \"../../../actions/programsActions\";\nimport { setMostRecentProgram } from \"../../../actions/userDataActions.js\";\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.userData.uid,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProgram: (program, data) => dispatch(addProgram(program, data)),\n    setMostRecentProgram: value => dispatch(setMostRecentProgram(value)),\n  };\n};\n\nconst CreateSketchModalContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CreateSketchModal);\n\nexport default CreateSketchModalContainer;\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Button } from \"reactstrap\";\nimport DropdownButton from \"./DropdownButton\";\nimport { SketchThumbnailArray, LanguageDropdownValues } from \"../constants\";\nimport { Container, Row, Col, FormGroup, Label, Input } from \"reactstrap\";\nimport * as fetch from \"../../../lib/fetch.js\";\n\nimport \"styles/SketchesModal.scss\";\n\nclass EditSketchModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newLanguage: -1,\n      newName: -1,\n      newThumbnail: -1,\n      disableSubmit: false,\n      error: \"\",\n      onThumbnails: false,\n    };\n  }\n  componentWillMount() {}\n  componentDidUpdate() {}\n\n  closeModal = () => {\n    if (this.props.onClose && {}.toString.call(this.props.onClose) === \"[object Function]\") {\n      this.props.onClose();\n    }\n    this.setState({\n      newLanguage: -1,\n      newName: -1,\n      newThumbnail: -1,\n      error: \"\",\n      onThumbnails: false,\n      disableSubmit: false,\n    });\n  };\n\n  // Next two bad____input are copied (and slightly modified) from create sketch modal\n\n  badNameInput = () => {\n    if (this.state.newName === -1) {\n      return false;\n    }\n    if (!this.state.newName) {\n      this.setState({ error: \"Name is required\" });\n      return true;\n    }\n    if (this.state.newName.length > 15) {\n      this.setState({ error: \"Name must be 15 characters or less\" });\n      return true;\n    }\n    return false;\n  };\n\n  badLanguageInput = () => {\n    if (this.state.newLanguage === -1) {\n      return false;\n    }\n    if (!this.state.newLanguage) {\n      this.setState({ error: \"Please select a language\" });\n      return true;\n    }\n\n    let notFound = true;\n    for (var i = 0; i < LanguageDropdownValues.length; i++) {\n      if (\n        this.state.newLanguage.display === LanguageDropdownValues[i].display &&\n        this.state.newLanguage.value === LanguageDropdownValues[i].value\n      ) {\n        notFound = false;\n        break;\n      }\n    }\n    if (notFound) {\n      this.setState({ error: \"Invalid language selected\" });\n      return true;\n    }\n\n    return false;\n  };\n\n  handleSubmitEdit = async e => {\n    e.preventDefault();\n\n    if (this.badNameInput() || this.badLanguageInput()) {\n      // note it's impossible to have a bad thumbnail input\n      return;\n    }\n\n    let data = {};\n    let doUpdate = false;\n\n    if (this.state.newLanguage !== -1) {\n      data.language = this.state.newLanguage.value;\n      doUpdate = true;\n    }\n    if (this.state.newName !== -1) {\n      data[\"name\"] = this.state.newName;\n      doUpdate = true;\n    }\n    if (this.state.newThumbnail !== -1) {\n      data[\"thumbnail\"] = this.state.newThumbnail;\n      doUpdate = true;\n    }\n    if (doUpdate) {\n      let updateData = {};\n      updateData[this.props.sketchKey] = data;\n      try {\n        fetch\n          .updatePrograms(this.props.uid, updateData)\n          .then(res => {\n            return res.json();\n          })\n          .then(json => {\n            if (!json.ok) {\n              this.setState({\n                disableSubmit: false,\n                error: json.error || \"Failed to edit sketch, please try again later\",\n              });\n              return;\n            }\n            if (this.state.newLanguage !== -1) {\n              this.props.setProgramLanguage(this.props.sketchKey, this.state.newLanguage.value);\n            }\n            if (this.state.newName !== -1) {\n              this.props.setProgramName(this.props.sketchKey, this.state.newName);\n            }\n            if (this.state.newThumbnail !== -1) {\n              this.props.setProgramThumbnail(this.props.sketchKey, this.state.newThumbnail);\n            }\n            this.closeModal();\n          })\n          .catch(err => {\n            this.setState({\n              disableSubmit: false,\n              error: \"Failed to edit sketch, please try again later\",\n            });\n            console.log(err);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n      this.setState({ disableSubmit: true, error: \"\" });\n    } else {\n      this.closeModal();\n    }\n  };\n\n  renderMainModal() {\n    let thumbnailPreview = (\n      <img\n        src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${\n          this.state.newThumbnail !== -1\n            ? SketchThumbnailArray[this.state.newThumbnail]\n            : this.props.sketchImg\n        }.svg`}\n        className={\"sketches-modal-header-thumbnail\"}\n        alt=\"icon\"\n      />\n    );\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.closeModal}\n        className=\"sketches-modal\"\n        overlayClassName=\"profile-image-overlay\"\n        ariaHideApp={false}\n      >\n        <Container>\n          <h2 className=\"text-center\">Editing \"{this.props.sketchName}\"</h2>\n          <hr />\n          <FormGroup row>\n            <Label className=\"text-right\" for=\"sketch-name\" xs={4}>\n              Name\n            </Label>\n            <Col xs={8}>\n              <Input\n                onChange={e => this.setState({ newName: e.target.value })}\n                value={this.state.newName !== -1 ? this.state.newName : this.props.sketchName}\n                id=\"sketch-name\"\n              />\n            </Col>\n          </FormGroup>\n          <br />\n          <Row>\n            <Col xs=\"4\" className=\"text-right\">\n              Language\n            </Col>\n            <Col xs=\"8\" className=\"d-flex align-items-center\">\n              <DropdownButton\n                dropdownItems={LanguageDropdownValues}\n                onSelect={lang => this.setState({ newLanguage: lang })}\n                displayValue={\n                  this.state.newLanguage !== -1\n                    ? this.state.newLanguage.display\n                    : this.props.sketchLang\n                }\n              />\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col xs=\"4\" className=\"text-right\">\n              <div\n                className=\"sketches-modal-header-thumbnail-container\"\n                style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"0\" }}\n              >\n                {thumbnailPreview}\n              </div>\n            </Col>\n            <Col xs=\"8\" className=\"d-flex align-items-center\">\n              <Button\n                color=\"primary\"\n                size=\"lg\"\n                onClick={() => {\n                  this.setState({ onThumbnails: true });\n                }}\n              >\n                Change\n              </Button>\n            </Col>\n          </Row>\n          <br />\n          <div className=\"text-center text-danger\">{this.state.error || <br />}</div>\n          <hr />\n          <Row>\n            <Col>\n              <Button\n                color=\"danger\"\n                onClick={this.closeModal}\n                size=\"lg\"\n                disabled={this.state.disableSubmit}\n                block\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                color=\"success\"\n                onClick={this.handleSubmitEdit}\n                size=\"lg\"\n                disabled={this.state.disableSubmit}\n                block\n              >\n                Confirm\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </ReactModal>\n    );\n  }\n\n  renderThumbnailModal() {\n    let icons = SketchThumbnailArray.map((val, index) => {\n      return (\n        <figure\n          className=\"sketches-gallery-item\"\n          key={val}\n          onClick={() => this.setState({ newThumbnail: index })}\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${val}.svg`}\n            className={\n              \"sketches-gallery-img\" + (this.state.newThumbnail === index ? \"-selected\" : \"\")\n            }\n            alt=\"icon\"\n          />\n        </figure>\n      );\n    });\n\n    let thumbnailPreview =\n      this.state.newThumbnail !== -1 ? (\n        <img\n          src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${\n            SketchThumbnailArray[this.state.newThumbnail]\n          }.svg`}\n          className={\"sketches-modal-header-thumbnail\"}\n          alt=\"icon\"\n        />\n      ) : (\n        <img\n          src={`${process.env.PUBLIC_URL}/img/sketch-thumbnails/${this.props.sketchImg}.svg`}\n          className={\"sketches-modal-header-thumbnail\"}\n          alt=\"icon\"\n        />\n      );\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.closeModal}\n        className=\"sketches-modal\"\n        overlayClassName=\"profile-image-overlay\"\n        ariaHideApp={false}\n      >\n        <form>\n          <div className=\"sketches-modal-header d-flex align-items-center\">\n            <h1>Choose a thumbnail</h1>\n            <div className=\"ml-4 sketches-modal-header-thumbnail-container\">{thumbnailPreview}</div>\n          </div>\n          <hr />\n          <div className=\"sketches-gallery\">{icons}</div>\n          <div style={{ color: \"red\", textAlign: \"center\" }}>{this.state.error || <br />}</div>\n        </form>\n        <hr />\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            this.setState({ onThumbnails: false });\n          }}\n          size=\"lg\"\n          block\n        >\n          Back\n        </Button>{\" \"}\n      </ReactModal>\n    );\n  }\n\n  render() {\n    if (this.state.onThumbnails) {\n      return this.renderThumbnailModal();\n    }\n\n    return this.renderMainModal();\n  }\n}\n\nexport default EditSketchModal;\n","import EditSketchModal from \"../components/EditSketchModal.js\";\nimport { connect } from \"react-redux\";\nimport {\n  setProgramLanguage,\n  setProgramName,\n  setProgramThumbnail,\n} from \"../../../actions/programsActions\";\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.userData.uid,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProgramLanguage: (program, value) => dispatch(setProgramLanguage(program, value)),\n    setProgramName: (program, value) => dispatch(setProgramName(program, value)),\n    setProgramThumbnail: (program, value) => dispatch(setProgramThumbnail(program, value)),\n  };\n};\n\nconst EditSketchModalContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EditSketchModal);\n\nexport default EditSketchModalContainer;\n","import React from \"react\";\nimport SketchBox from \"./components/SketchBox\";\nimport ConfirmDeleteModalContainer from \"./containers/ConfirmDeleteModalContainer\";\nimport CreateSketchModalContainer from \"./containers/CreateSketchModalContainer\";\nimport EditSketchModalContainer from \"./containers/EditSketchModalContainer\";\nimport OpenPanelButtonContainer from \"../common/containers/OpenPanelButtonContainer\";\nimport { SketchThumbnailArray } from \"./constants\";\nimport ProcessingConstructor from \"../Editor/components/Output/Processing\";\n// import { PANEL_SIZE } from \"../../constants\";\nimport \"styles/Sketches.scss\";\n\nimport { Button } from \"reactstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFile } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPython } from \"@fortawesome/free-brands-svg-icons\";\nimport { faHtml5 } from \"@fortawesome/free-brands-svg-icons\";\n\nconst ROW_PADDING = 100;\nconst SKETCH_WIDTH = 220;\n\nclass Sketches extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDeleteModalOpen: false,\n      createSketchModalOpen: false,\n      editSketchModalOpen: false,\n      selectedSketch: \"\",\n      selectedImg: \"\",\n      selectedLang: \"\",\n      selectedKey: \"\",\n    };\n  }\n\n  getRandomSketchThumbnail = () => {\n    return SketchThumbnailArray[Math.floor(Math.random() * SketchThumbnailArray.length)];\n  };\n\n  downloadSketchCode = (name, language, code) => {\n    let extension = \".\";\n    switch (language) {\n      case \"python\":\n        extension += \"py\";\n        break;\n      case \"processing\": // this is because we construct the processing result as an HTML file. jank.\n      case \"html\":\n        extension += \"html\";\n        break;\n      default:\n        extension += \"txt\";\n    }\n    // taken from this: https://stackoverflow.com/questions/44656610/download-a-string-as-txt-file-in-react\n    const element = document.createElement(\"a\");\n    let file;\n    if (language === \"processing\") {\n      file = new Blob([ProcessingConstructor(code, true)], { type: \"text/plain\" });\n    } else {\n      file = new Blob([code], { type: \"text/plain\" });\n    }\n    element.href = URL.createObjectURL(file);\n    element.download = name + extension;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  setCreateSketchModalOpen = val => {\n    this.setState({ createSketchModalOpen: val });\n  };\n\n  setConfirmDeleteModalOpen = (val, sketch, key) => {\n    this.setState({ confirmDeleteModalOpen: val, selectedSketch: sketch, selectedKey: key });\n  };\n\n  setEditSketchModalOpen = (val, sketch, img, lang, key) => {\n    this.setState({\n      editSketchModalOpen: val,\n      selectedSketch: sketch,\n      selectedImg: img,\n      selectedLang: lang,\n      selectedKey: key,\n    });\n  };\n\n  setProgram = name => {\n    this.props.setMostRecentProgram(name);\n  };\n\n  renderHeader = () => (\n    <div className=\"sketches-header\">\n      <OpenPanelButtonContainer />\n      <div className=\"sketches-header-text\">Sketches</div>\n      <Button\n        className=\"ml-auto mr-2\"\n        color=\"success\"\n        size=\"lg\"\n        onClick={() => this.setCreateSketchModalOpen(true)}\n      >\n        <FontAwesomeIcon icon={faFile} /> Create Sketch\n      </Button>\n    </div>\n  );\n\n  getThumbnailSrc = val => {\n    if (val === undefined || val === \"\" || val >= SketchThumbnailArray.length || val < 0) {\n      return SketchThumbnailArray[0];\n    }\n    return SketchThumbnailArray[val];\n  };\n\n  renderSketches = () => {\n    let newList = this.props.programs.concat([]);\n    if (newList.size === 0) {\n      return (\n        <div>\n          <div className=\"no-sketches-container\">\n            <h2>There's nothing here! Why don't you try creating a sketch?</h2>\n            <br />\n            <p>\n              <Button color=\"success\" size=\"lg\" onClick={() => this.setCreateSketchModalOpen(true)}>\n                Create A Sketch\n              </Button>\n            </p>\n          </div>\n        </div>\n      );\n    }\n    let sketches = [];\n    newList.sort((a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name === b.name) return 0;\n      // if (a.name > b.name) return 1;\n      else return 1;\n    });\n    newList.forEach(({ key, name, language, thumbnail, code }) => {\n      let faLanguage;\n      let languageDisplay; // not a great way to do this!\n      switch (language) {\n        case \"python\":\n          faLanguage = faPython;\n          languageDisplay = \"Python\";\n          break;\n        case \"processing\":\n          faLanguage = faCogs;\n          languageDisplay = \"Processing\";\n          break;\n        case \"html\":\n        default:\n          faLanguage = faHtml5;\n          languageDisplay = \"HTML\";\n      }\n      sketches.push(\n        <SketchBox\n          img={this.getThumbnailSrc(thumbnail)}\n          icon={faLanguage}\n          name={name}\n          key={key}\n          deleteFunc={() => {\n            this.setConfirmDeleteModalOpen(true, name, key);\n          }}\n          downloadFunc={() => {\n            this.downloadSketchCode(name, language, code);\n          }}\n          editFunc={() => {\n            this.setEditSketchModalOpen(\n              true,\n              name,\n              this.getThumbnailSrc(thumbnail),\n              languageDisplay,\n              key,\n            );\n          }}\n          redirFunc={() => {\n            this.setProgram(key);\n          }}\n        />,\n      );\n    });\n    let numSketchesPerRow = Math.floor((this.props.calculatedWidth - ROW_PADDING) / SKETCH_WIDTH);\n    let rows = [];\n    let originalLength = sketches.length;\n    for (let i = 0; i < originalLength / numSketchesPerRow; i++) {\n      rows.push(\n        <div className=\"sketches-grid-row\" key={i}>\n          {sketches.splice(0, numSketchesPerRow)}\n        </div>,\n      );\n    }\n\n    return <div className=\"sketches-grid\">{rows}</div>;\n  };\n\n  renderConfirmDeleteModal = () => (\n    <ConfirmDeleteModalContainer\n      isOpen={this.state.confirmDeleteModalOpen}\n      onClose={() => this.setConfirmDeleteModalOpen(false)}\n      sketchName={this.state.selectedSketch}\n      sketchKey={this.state.selectedKey}\n    />\n  );\n\n  renderCreateSketchModal = () => (\n    <CreateSketchModalContainer\n      isOpen={this.state.createSketchModalOpen}\n      onClose={() => this.setCreateSketchModalOpen(false)}\n    />\n  );\n\n  renderEditSketchModal = () => (\n    <EditSketchModalContainer\n      isOpen={this.state.editSketchModalOpen}\n      onClose={() => this.setEditSketchModalOpen(false)}\n      sketchName={this.state.selectedSketch}\n      sketchImg={this.state.selectedImg}\n      sketchLang={this.state.selectedLang}\n      sketchKey={this.state.selectedKey}\n    />\n  );\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        {this.renderHeader()}\n        {this.renderSketches()}\n        {this.renderCreateSketchModal()}\n        {this.renderConfirmDeleteModal()}\n        {this.renderEditSketchModal()}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const containerStyle = {\n      left: this.props.left || 0,\n      width: this.props.calculatedWidth,\n      height: this.props.screenHeight,\n    };\n\n    return (\n      <div className=\"sketches-container\" style={containerStyle}>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default Sketches;\n","import Sketches from \"../index.js\";\nimport { connect } from \"react-redux\";\nimport { setMostRecentProgram } from \"../../../actions/userDataActions.js\";\nimport { togglePanel } from \"../../../actions/uiActions.js\";\nimport Immutable from \"immutable\";\nimport { PANEL_SIZE, CLOSED_PANEL_LEFT, OPEN_PANEL_LEFT } from \"../../../constants\";\n\nconst mapStateToProps = state => {\n  const { mostRecentProgram } = state.userData;\n  const programs = state.programs.keySeq().map(id => {\n    let temp = state.programs.get(id, Immutable.Map()).toJS();\n    temp.key = id;\n    return temp;\n  });\n\n  const left = (state.ui.panelOpen ? OPEN_PANEL_LEFT : CLOSED_PANEL_LEFT) + PANEL_SIZE;\n  const calculatedWidth = state.ui.screenWidth - (left || 0);\n\n  return {\n    mostRecentProgram,\n    programs,\n    calculatedWidth,\n    left,\n    screenHeight: state.ui.screenHeight,\n    panelOpen: state.ui.panelOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMostRecentProgram: value => dispatch(setMostRecentProgram(value)),\n    togglePanel: () => dispatch(togglePanel()),\n  };\n};\n\nconst SketchesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Sketches);\n\nexport default SketchesContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport firebase from \"firebase\";\nimport {\n  MINIMUM_DISPLAY_NAME_LENGTH,\n  MAXIMUM_DISPLAY_NAME_LENGTH,\n  PHOTO_NAMES,\n  DEFAULT_PHOTO_NAME,\n  PANEL_SIZE,\n} from \"../../constants\";\nimport ReactModal from \"react-modal\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"styles/Panel.scss\";\nimport Footer from \"./Footer\";\n\n/**--------Props--------\n * togglePanel: function to be called when the panel is collapsed or opened\n */\n\nclass ProfilePanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameIsHovering: false,\n      imageIsHovering: false,\n      editingName: false,\n      showModal: false,\n      name: this.props.displayName,\n      selectedImage: \"\",\n      displayNameMessage: \"\",\n    };\n  }\n\n  componentDidUpdate() {}\n\n  handleOpenModal = () => {\n    this.setState({ showModal: true, selectedImage: this.props.photoName });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ selectedImage: \"\", showModal: false });\n  };\n\n  handleEditNameClick = () => {\n    this.setState(prevState => {\n      return { editingName: true };\n    });\n  };\n\n  handleEditImageClick = () => {\n    this.setState(prevState => {\n      return { showModal: true };\n    });\n  };\n\n  onNameChange = e => {\n    this.setState({ name: e.target.value });\n  };\n\n  checkInputs = () => {\n    const name = this.state.name;\n    if (name.length < MINIMUM_DISPLAY_NAME_LENGTH || name.length > MAXIMUM_DISPLAY_NAME_LENGTH) {\n      this.setState({\n        displayNameMessage: `Display name must be between ${MINIMUM_DISPLAY_NAME_LENGTH}-${MAXIMUM_DISPLAY_NAME_LENGTH} characters long`,\n      });\n      return true;\n    } else if (name.match(/[^a-zA-Z0-9!@#$% ]/)) {\n      this.setState({\n        displayNameMessage:\n          \"Only use upper case, lower case, numbers, spaces, and/or the following special characters !@#$%\",\n      });\n      return true;\n    }\n    return false;\n  };\n\n  onNameSubmit = e => {\n    e.preventDefault();\n    let badInputs = this.checkInputs();\n\n    if (badInputs) {\n      this.setState({ name: this.props.displayName, editingName: false });\n      return;\n    } else {\n      this.props.setDisplayName(this.state.name);\n      this.setState({ editingName: false, displayNameMessage: \"\" });\n      return;\n    }\n  };\n\n  onImageSubmit = () => {\n    // SEND IMAGE NAME TO BACKEND, CHANGE IMAGE\n    this.props.setPhotoName(this.state.selectedImage);\n    this.handleCloseModal();\n    this.setState({ selectedImage: \"\" });\n  };\n\n  renderErrorMessage = (msg, addBreak) => {\n    if (msg)\n      return (\n        <span>\n          <div className=\"profile-input-error\">{msg}</div>\n        </span>\n      );\n\n    return addBreak ? <br /> : null;\n  };\n\n  renderPanelImage = () => {\n    return (\n      <div\n        className=\"panel-image-container\"\n        onMouseEnter={() => this.setState({ imageIsHovering: true })}\n        onMouseLeave={() => this.setState({ imageIsHovering: false })}\n      >\n        <img\n          className=\"panel-image\"\n          src={PHOTO_NAMES[this.props.photoName] || PHOTO_NAMES[DEFAULT_PHOTO_NAME]} // needs to be edited to use profile image name\n          alt=\"Your profile\"\n        />\n        {this.state.imageIsHovering && (\n          <button className=\"image-edit-button\" onClick={this.handleOpenModal}>\n            <FontAwesomeIcon icon={faEdit} />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  onImageClick = name => {\n    this.setState(prevState => {\n      return { selectedImage: name };\n    });\n  };\n\n  renderImageModal = () => {\n    let names = Object.keys(PHOTO_NAMES);\n    let icons = names.map(val => {\n      return (\n        <figure className=\"gallery-item\" key={val} onClick={() => this.onImageClick(val)}>\n          <img\n            src={PHOTO_NAMES[val]}\n            className={\"gallery-img\" + (this.state.selectedImage === val ? \"-selected\" : \"\")}\n            alt=\"icon\"\n          />\n        </figure>\n      );\n    });\n    return (\n      <ReactModal\n        isOpen={this.state.showModal}\n        onRequestClose={this.handleCloseModal}\n        className=\"profile-image-modal\"\n        overlayClassName=\"profile-image-overlay\"\n        ariaHideApp={false}\n      >\n        <div className=\"gallery\">{icons}</div>\n        <div className=\"text-center\">\n          <Button\n            color=\"success\"\n            size=\"lg\"\n            onClick={this.onImageSubmit}\n            id=\"modal-change-image-button\"\n          >\n            Submit\n          </Button>\n        </div>\n      </ReactModal>\n    );\n  };\n\n  renderName = () => {\n    if (!this.state.editingName) {\n      return (\n        <div\n          className=\"panel-name\"\n          onMouseEnter={() => this.setState({ nameIsHovering: true })}\n          onMouseLeave={() => this.setState({ nameIsHovering: false })}\n          onClick={this.handleEditNameClick}\n        >\n          {this.props.displayName || \"Joe Bruin\"}\n          {this.state.nameIsHovering && (\n            <button className=\"edit-icon-image\" onClick={this.handleEditNameClick}>\n              <FontAwesomeIcon icon={faEdit} />\n            </button>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <form className=\"panel-edit-container\" onSubmit={this.onNameSubmit}>\n          <input\n            autoFocus\n            className=\"panel-edit\"\n            placeholder={this.props.displayName}\n            onChange={this.onNameChange}\n            value={this.state.name}\n            onBlur={this.onNameSubmit}\n          />\n        </form>\n      );\n    }\n  };\n\n  renderEditorButton = () => (\n    <Link\n      to={{ pathname: \"/editor\" }}\n      className=\"panel-button btn btn-secondary btn-lg btn-block\"\n      key=\"sketches-button\"\n    >\n      <FontAwesomeIcon icon={faPencilAlt} />\n      <span className=\"panel-button-text\">Editor</span>\n    </Link>\n  );\n\n  renderSketchesButton = () => (\n    <Link\n      to={{ pathname: \"/sketches\" }}\n      className=\"panel-button btn btn-secondary btn-lg btn-block\"\n      key=\"sketches-button\"\n    >\n      <FontAwesomeIcon icon={faBook} />\n      <span className=\"panel-button-text\">Sketches</span>\n    </Link>\n  );\n\n  renderSignOutButton = () => (\n    <Button\n      className=\"panel-button\"\n      key=\"sign-out-button\"\n      size=\"lg\"\n      block\n      onClick={() => firebase.auth().signOut()}\n    >\n      <FontAwesomeIcon icon={faSignOutAlt} />\n      <span className=\"panel-button-text\">Log Out</span>\n    </Button>\n  );\n\n  renderButtons = () => {\n    let panelButtons = [];\n\n    switch (this.props.contentType) {\n      case \"sketches\":\n        panelButtons.push(this.renderEditorButton());\n        break;\n      case \"editor\":\n        panelButtons.push(this.renderSketchesButton());\n        break;\n      default:\n        break;\n    }\n\n    panelButtons.push(this.renderSignOutButton());\n\n    return <div className=\"panel-buttons\">{panelButtons}</div>;\n  };\n\n  renderContent = () => (\n    <div className=\"panel-content\">\n      {this.renderPanelImage()}\n      {this.renderImageModal()}\n      {this.renderName()}\n      {this.renderErrorMessage(this.state.displayNameMessage)}\n      {this.renderButtons()}\n    </div>\n  );\n\n  renderCollapseButton = () => (\n    <div className=\"panel-collapse-button\" onClick={this.props.togglePanel}>\n      <FontAwesomeIcon icon={faTimes} />\n    </div>\n  );\n\n  render() {\n    const panelStyle = {\n      left: this.props.left,\n      height: this.props.screenHeight,\n      width: PANEL_SIZE,\n    };\n    return (\n      <div className=\"panel\" style={panelStyle}>\n        {this.renderCollapseButton()}\n        {this.renderContent()}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default ProfilePanel;\n","import ProfilePanel from \"../ProfilePanel\";\nimport { connect } from \"react-redux\";\nimport { setDisplayName, setPhotoName } from \"../../../actions/userDataActions\";\nimport { togglePanel } from \"../../../actions/uiActions\";\nimport { DEFAULT_PHOTO_NAME, CLOSED_PANEL_LEFT, OPEN_PANEL_LEFT } from \"../../../constants\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    displayName: state.userData.displayName,\n    uid: state.userData.uid,\n    photoName: state.userData.photoName || DEFAULT_PHOTO_NAME,\n    screenHeight: state.ui.screenHeight,\n    left: state.ui.panelOpen ? OPEN_PANEL_LEFT : CLOSED_PANEL_LEFT,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    collectUserPhoto: () => {},\n    setDisplayName: name => dispatch(setDisplayName(name)),\n    setPhotoName: name => dispatch(setPhotoName(name)),\n    togglePanel: () => {\n      dispatch(togglePanel());\n    },\n  };\n};\n\nconst ProfilePanelContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ProfilePanel);\n\nexport default ProfilePanelContainer;\n","import React from \"react\";\nimport EditorContainer from \"./Editor/containers/EditorContainer\";\nimport SketchesPageContainer from \"./Sketches/containers/SketchesContainer\";\nimport \"styles/Main.scss\";\nimport ProfilePanelContainer from \"./common/containers/ProfilePanelContainer\";\n\nclass Editor extends React.Component {\n  /**\n   * constructor\n   *\n   * @param {object} props\n   *    @key {object} user - information of user; (should never be null bc if someone's not logged in, sends them to the login page)\n   *      @key {}\n   *    @key {function} clearUserData - redux action to log the user out, brings you to homepage after (bc if you're not logged in, you're rerouted to the home page)\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      textEditorSize: this.props.screenWidth * 0.5,\n    };\n  }\n\n  //==============React Lifecycle Functions===================//\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    if (this.props.screenWidth !== prevProps.screenWidth) {\n      this.setState({ textEditorSize: this.props.screenWidth * 0.5 });\n    }\n  }\n\n  componentWillUnmount() {}\n\n  renderSketchesPage = () => <SketchesPageContainer />;\n\n  renderEditor = () => <EditorContainer />;\n\n  renderContent = () => {\n    switch (this.props.contentType) {\n      case \"sketches\":\n        return this.renderSketchesPage();\n      case \"editor\":\n      default:\n        return this.renderEditor();\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"main\"\n        style={{ width: this.props.screenWidth, height: this.props.screenHeight }}\n      >\n        <React.Fragment>\n          <ProfilePanelContainer contentType={this.props.contentType} />\n          {this.renderContent()}\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","import Main from \"../Main.js\";\nimport { connect } from \"react-redux\";\nimport { togglePanel } from \"../../actions/uiActions.js\";\nimport { CLOSED_PANEL_LEFT, OPEN_PANEL_LEFT } from \"../../constants\";\n\nconst mapStateToProps = state => {\n  return {\n    screenWidth: state.ui.screenWidth,\n    screenHeight: state.ui.screenHeight,\n    panelOpen: state.ui.panelOpen,\n    panelLeft: state.ui.panelOpen ? OPEN_PANEL_LEFT : CLOSED_PANEL_LEFT,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    togglePanel: () => {\n      dispatch(togglePanel());\n    },\n  };\n};\n\nconst MainContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n\nexport default MainContainer;\n","import React from \"react\";\nimport { RingLoader } from \"react-spinners\";\nimport \"styles/Loading.scss\";\n\n/*\n\tProps:\n\t\tbgColor: string representing the color of the background of the img (can be hex color, rgb(r, g, b, a), or color name)\n\t\ttextColor: string representing the color of the text in the button (can be hex color, rgb(r, g, b, a), or color name)\n\t\timgSrc: string representing the location of the img used as the icon (can be in the form of URL, path location, or data representing image)\n\t\ttextPadding: string representing padding to the left of the text, i.e. distance from the img (give px units)\n*/\n\nconst Loading = props => (\n  <div className=\"Loading\">\n    <div className=\"Loading-title\">Loading</div>\n    <RingLoader color={\"#171124\"} size={250} loading={true} />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { RingLoader } from \"react-spinners\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport SHA256 from \"crypto-js/sha256\";\nimport LoginInput from \"../Login/LoginInput.js\";\nimport {\n  MINIMUM_USERNAME_LENGTH,\n  MINIMUM_PASSWORD_LENGTH,\n  MAXIMUM_USERNAME_LENGTH,\n  MAXIMUM_PASSWORD_LENGTH,\n  EMAIL_DOMAIN_NAME,\n} from \"../../constants\";\n\n/**\n * Props\n *\n * None\n */\n\nexport default class CreateUserForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errorMessage: \"\",\n      waiting: false,\n      usernameMessage: \"\",\n      passwordMessage: \"\",\n    };\n  }\n\n  /**\n   * checkInputs - validates username and password.\n   * The criteria checked:\n   *    -Username length: as defined in constants file\n   *    -Username characters: only alphanumeric characters, plus !@#$%\n   *    -Password length: as defined in constants file\n   *    -Password characters: only alphanumeric characters, plus !@#$%\n   * @return {boolean} - false when bad inputs given\n   */\n  checkInputs = () => {\n    const { username, password, confirmPassword } = this.state;\n    let badInputs = true;\n\n    //if username is too long, too short, has non ascii and some special characters, reject it\n    if (username.length < MINIMUM_USERNAME_LENGTH || username.length > MAXIMUM_USERNAME_LENGTH) {\n      this.setState({\n        usernameMessage: `Username must be between ${MINIMUM_USERNAME_LENGTH}-${MAXIMUM_USERNAME_LENGTH} characters long`,\n      });\n      badInputs = false;\n    } else if (username.match(/[^a-zA-Z0-9!@#$%]/)) {\n      this.setState({\n        usernameMessage:\n          \"Username must only use upper case and lower case letters, numbers, and/or the special characters !@#$%\",\n      });\n      badInputs = false;\n    } else {\n      this.setState({ usernameMessage: \"\" });\n    }\n\n    //if password is too long, too short, has non ascii and some special characters, reject it\n    if (password.length < MINIMUM_PASSWORD_LENGTH || password.length > MAXIMUM_PASSWORD_LENGTH) {\n      this.setState({\n        passwordMessage: `Password must be between ${MINIMUM_PASSWORD_LENGTH}-${MAXIMUM_PASSWORD_LENGTH} characters long`,\n      });\n      badInputs = false;\n    } else if (password.match(/[^a-zA-Z0-9!@#$%]/)) {\n      this.setState({\n        passwordMessage:\n          \"Password must only use upper case and lower case letters, numbers, and/or the special characters !@#$%\",\n      });\n      badInputs = false;\n    } else if (password !== confirmPassword) {\n      this.setState({\n        passwordMessage: `Password and Confirm Password don't match`,\n        password: \"\",\n        confirmPassword: \"\",\n      });\n      badInputs = false;\n    } else {\n      this.setState({ passwordMessage: \"\" });\n    }\n\n    return badInputs;\n  };\n\n  /**\n   * submit - this function executes on the click of the button to create a new user on the\n   * createUser page\n   * @param  {HTMLElement} e - solely used to prevent default page behavior on the clicking\n   * of the button\n   * @return {void}   submit returns early if the inputs passed by a prospective user\n   * are bad.\n   */\n  submit = e => {\n    e.preventDefault();\n\n    this.setState({\n      waiting: true,\n      errorMessage: \"\",\n      usernameMessage: \"\",\n      passwordMessage: \"\",\n    });\n\n    let validInputs = this.checkInputs();\n\n    //if we found any bad inputs, don't try to create the user on the server\n    if (!validInputs) {\n      this.setState({ waiting: false });\n      return;\n    }\n\n    // This is part of the firebase email/password workaround.\n    // We create an email lookalike to trick firebase into thinking the user\n    // signed up with an email, instead of a username, display name, and password\n    let email = this.state.username + EMAIL_DOMAIN_NAME;\n    let passHash = SHA256(this.state.password).toString();\n\n    // register user in firebase\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, passHash)\n      .then(({ user }) => {})\n      .catch(err => {\n        console.error(err);\n        let newMsg = err.message;\n        switch (err.code) {\n          case \"auth/invalid-email\":\n            newMsg =\n              \"Invalid username. Usernames must only have alphanumeric characters plus !@#$%.\";\n            break;\n          case \"auth/email-already-in-use\":\n            newMsg = \"Username is taken; please use another one.\";\n            break;\n          case \"auth/user-not-found\": // this shouldn't ever happen\n            newMsg = \"No account found for username.\";\n            break;\n          case \"auth/wrong-password\":\n            newMsg = \"Invalid password provided.\";\n            break;\n          case \"auth/network-request-failed\":\n            newMsg = \"Network error - check your internet connection.\";\n            break;\n          case \"auth/app-deleted\":\n          case \"auth/app-not-authorized\":\n          case \"auth/argument-error\":\n          case \"auth/invalid-api-key\":\n          case \"auth/operation-not-allowed\":\n          case \"auth/requires-recent-login\":\n          case \"auth/unauthorized-domain\":\n            newMsg =\n              \"App was not properly configured. Please contact administrator. Error: \" + err.code;\n            break;\n          case \"auth/invalid-user-token\":\n          case \"auth/user-disabled\":\n          case \"auth/user-token-expired\":\n          case \"auth/web-storage-unsupported\":\n            newMsg = \"Issue with user. Please contact administrator. Error: \" + err.code;\n            break;\n          default:\n            newMsg = \"Failed to create user: \" + err.code;\n        }\n        this.setState({ waiting: false, errorMessage: newMsg || \"Failed to create user.\" });\n      });\n\n    this.setState({ password: \"\", confirmPassword: \"\" });\n  };\n\n  renderErrorMessage = (msg, addBreak) => {\n    if (msg)\n      return (\n        <span>\n          <div className=\"login-form-input-error\">{msg}</div>\n        </span>\n      );\n\n    return addBreak ? <br /> : null;\n  };\n\n  updateUsername = username => this.setState({ username });\n  updatePassword = password => this.setState({ password });\n  updateConfirmPassword = confirmPassword => this.setState({ confirmPassword });\n\n  renderInputs = () => (\n    <div className=\"login-form-input-list\">\n      <div>\n        <LoginInput\n          type={\"Username\"}\n          data={this.state.username}\n          waiting={this.state.waiting}\n          onChange={this.updateUsername}\n        />\n        <LoginInput\n          type={\"Password\"}\n          data={this.state.password}\n          waiting={this.state.waiting}\n          onChange={this.updatePassword}\n        />\n        <LoginInput\n          type={\"Confirm Password\"}\n          data={this.state.confirmPassword}\n          waiting={this.state.waiting}\n          onChange={this.updateConfirmPassword}\n        />\n        {this.renderErrorMessage(this.state.usernameMessage)}\n        {this.renderErrorMessage(this.state.passwordMessage)}\n        {this.renderErrorMessage(this.state.errorMessage, true)}\n      </div>\n    </div>\n  );\n\n  renderAction = () => {\n    if (this.state.waiting) {\n      return (\n        <div className=\"login-form-loader\">\n          <RingLoader color={\"#857e8f\"} size={50} loading={true} />\n        </div>\n      );\n    } else {\n      return (\n        <Button className=\"login-form-button\" size=\"lg\" type=\"submit\">\n          Create Account\n        </Button>\n      );\n    }\n  };\n\n  renderLink = () => (\n    <Link to=\"/login\" className=\"login-form-link\">\n      Already have an account? Click here to login.\n    </Link>\n  );\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <form className=\"login-form\" onSubmit={this.submit}>\n          <h1>Create a new account</h1>\n          <br />\n          {this.renderInputs()}\n          {this.renderAction()}\n          <br />\n          <br />\n          {this.renderLink()}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Footer from \"./common/Footer.js\";\nimport CreateUserForm from \"./CreateUser/CreateUserForm.js\";\nimport LoginGuy from \"../img/blueguy.png\";\n\n/**--------Props--------\n * None\n */\n\nclass CreateUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-page-content\" style={{ backgroundImage: `url(${LoginGuy})` }}>\n          <CreateUserForm />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default CreateUser;\n","import CreateUser from \"../CreateUser.js\";\nimport { connect } from \"react-redux\";\nimport { withFirestore } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    \n  }\n}\n\nconst CreateUserPage = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withFirestore,\n)(CreateUser);\n\nexport default CreateUserPage;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport Footer from \"./common/Footer\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport \"styles/Page.scss\";\n\nclass Error extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <h2>Uh oh, something went wrong!</h2>\n        <h1>Error: {this.props.errorMsg}</h1>\n        <br />\n        <Link to=\"/\">\n          <Button color=\"success\" size=\"lg\">\n            Back to safety\n          </Button>\n        </Link>\n        &nbsp;\n        <Button color=\"danger\" size=\"lg\" onClick={() => firebase.auth().signOut()}>\n          Log Out\n        </Button>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default Error;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport Footer from \"./common/Footer\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/Page.scss\";\n\nclass Error extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <span>Error: 404</span>\n        <h1>Uh oh, page not found!</h1>\n        <br />\n        <Link to=\"/\">\n          <Button color=\"success\" size=\"lg\">\n            Back to safety\n          </Button>\n        </Link>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default Error;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport LoginPage from \"./containers/LoginContainer\";\nimport MainContainer from \"./containers/MainContainer\";\nimport LoadingPage from \"./common/LoadingPage\";\nimport CreateUserPage from \"./containers/CreateUserContainer\";\nimport Error from \"./Error\";\nimport PageNotFound from \"./PageNotFound\";\nimport firebase from \"firebase\";\nimport \"styles/app.scss\";\n\nconst provider = new firebase.auth.FacebookAuthProvider();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedAuth: false,\n    };\n  }\n\n  //==============React Lifecycle Functions===================//\n  componentDidUpdate(a, b) {}\n\n  componentWillMount = () => {\n    firebase.auth().onAuthStateChanged(async user => {\n      await this.onAuthHandler(user);\n    });\n    window.addEventListener(\"resize\", this.handleResize, true);\n  };\n\n  componentWillUnmout = () => {\n    window.removeEventListener(\"resize\", this.handleResize, true);\n  };\n\n  handleResize = () => {\n    this.props.screenResize(window.innerWidth, window.innerHeight);\n  };\n\n  /**\n   *  TODO: Consider reducing the numerous side effects of this function in favor of the one function, one purpose principle\n   * onAuthHandler - on execution will set a flag checkedAuth to true. If a valid user is passed to the function,\n   * onAuthHandler will attempt to load the metadata and account data corresponding to this account.  If the user\n   * has not set their displayName, it will be set to \"New User\". If no user is passed, we clear any existng user data from the\n   * application.\n   * @param  {firebase.auth().currentUser}  user - a user object as passed by firebase.auth()\n   */\n  onAuthHandler = async user => {\n    console.log(\"checking auth\");\n    if (user) {\n      console.log(\"found user\");\n      const { uid } = user;\n      if (uid) {\n        await this.props.loadUserData(uid, this.showErrorPage);\n        this.setState({ checkedAuth: true });\n      } else {\n        this.props.loadFailure(\"Failed to load user data...\");\n        this.setState({ checkedAuth: true });\n      }\n    } else {\n      console.log(\"no user found\");\n      this.props.clearUserData();\n      this.setState({ checkedAuth: true });\n    }\n  };\n\n  showErrorPage = err => {\n    console.log(err);\n    this.props.loadFailure(err);\n  };\n\n  renderHome = isValidUser => {\n    return isValidUser ? <Redirect to=\"/editor\" /> : <Redirect to=\"/login\" />;\n  };\n\n  render() {\n    //if we haven't checked if the user is logged in yet, show a loading screen\n    if (!this.state.checkedAuth) {\n      return <LoadingPage />;\n    }\n\n    if (this.props.errorMsg !== \"\") {\n      return <Error errorMsg={this.props.errorMsg} />;\n    }\n\n    //the user is not valid if there's no UID\n    let isValidUser = this.props.uid;\n\n    return (\n      <Router basename=\"/TeachLAFrontend\">\n        <div className=\"App\">\n          <Switch>\n            {/*if the user is loggedIn, redirect them to the editor, otherwise, show the login page*?*/}\n            <Route\n              exact\n              path=\"/\"\n              render={() =>\n                isValidUser ? <Redirect to=\"/editor\" /> : <LoginPage provider={provider} />\n              }\n            />\n            {/*if the user is loggedIn, redirect them to the editor, otherwise, show the login page*?*/}\n            <Route\n              path=\"/login\"\n              render={() =>\n                isValidUser ? <Redirect to=\"/editor\" /> : <LoginPage provider={provider} />\n              }\n            />\n            {/*if the user is not loggedIn, redirect them to the login page, otherwise, show the editor page*?*/}\n            <Route\n              path=\"/editor\"\n              render={() =>\n                !isValidUser ? <Redirect to=\"/login\" /> : <MainContainer contentType=\"editor\" />\n              }\n            />\n            {/*if the user is loggedIn, redirect them to the editor page, otherwise, show the createUser page*?*/}\n            <Route\n              path=\"/createUser\"\n              render={() => (isValidUser ? <Redirect to=\"/editor\" /> : <CreateUserPage />)}\n            />\n            {/*if the user isn't loggedIn, redirect them to the login page, otherwise, show the view page*?*/}\n            <Route\n              path=\"/sketches\"\n              render={() =>\n                isValidUser ? <MainContainer contentType=\"sketches\" /> : <Redirect to=\"/login\" />\n              }\n            />\n            {/* Default error page */}\n            <Route\n              path=\"/error\"\n              render={() =>\n                this.props.errorMsg ? (\n                  <Error errorMsg={this.props.errorMsg} />\n                ) : (\n                  this.renderHome(isValidUser)\n                )\n              }\n            />\n\n            {/* Matches all other paths */}\n            <Route render={() => <PageNotFound />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/*\n\tused to link state to App which contains the router, could link functions, but rather do that in each individual container\n*/\nimport App from \"../app.js\";\nimport { connect } from \"react-redux\";\nimport { loadUserData, clearUserData, loadFailure } from \"../../actions/userDataActions.js\";\nimport { loadPrograms, clearPrograms } from \"../../actions/programsActions\";\nimport { screenResize } from \"../../actions/uiActions\";\nimport * as fetch from \"../../lib/fetch.js\";\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.userData.uid,\n    errorMsg: state.userData.error,\n    screenWidth: state.ui.screenWidth,\n    screenHeight: state.ui.screenHeight,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadUserData: async (uid, onFailure) => {\n      const { ok, data /*error*/ } = await fetch.getUserData(uid, true);\n      //if the request went fine, and there's a non empty userData\n      if (ok && data && data.userData && Object.keys(data.userData).length) {\n        if (data.programs) {\n          dispatch(loadPrograms(data.programs));\n        }\n        dispatch(loadUserData(uid, data.userData));\n      } else {\n        onFailure(\"SERVER ERROR: Unable to get user data from server\");\n      }\n    },\n    clearUserData: () => {\n      dispatch(clearUserData());\n      dispatch(clearPrograms());\n    },\n    loadFailure: err => {\n      dispatch(loadFailure(err));\n    },\n    screenResize: (width, height) => dispatch(screenResize(width, height)),\n  };\n};\n\nconst Root = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\nexport default Root;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  LOAD_USER_DATA,\n  CLEAR_USER_DATA,\n  LOAD_FAILURE,\n  SET_DISPLAY_NAME,\n  SET_MOST_RECENT_PROGRAM,\n  SET_PHOTO_NAME,\n} from \"../actions/userDataActions\";\n\nimport * as fetch from \"../lib/fetch.js\";\n\nconst initialState = {\n  error: \"\",\n  displayName: \"\",\n  uid: \"\",\n  mostRecentProgram: \"\",\n  photoName: \"\",\n};\n\nfunction userDataReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_USER_DATA:\n      //pull all values we want to pay attention to out of the object\n      return Object.assign({}, state, action.userData);\n    case CLEAR_USER_DATA:\n      return initialState;\n    case LOAD_FAILURE:\n      return Object.assign({}, state, { error: action.message });\n    case SET_DISPLAY_NAME:\n      let newName = action.value;\n      fetch\n        .updateUserData(state.uid, { displayName: newName })\n        .then(response => {})\n        .catch(err => {\n          state.error = err;\n          console.log(err);\n        });\n      return Object.assign({}, state, { displayName: newName });\n    case SET_PHOTO_NAME:\n      let newPhotoName = action.photoName;\n      fetch\n        .updateUserData(state.uid, { photoName: newPhotoName })\n        .then(response => {\n          //if nothing went bad, keep the display name, otherwise, change it back (or dont, depends how we wanna do it)\n        })\n        .catch(err => {\n          state.error = err;\n          console.log(err);\n        });\n      return Object.assign({}, state, { photoName: newPhotoName });\n    case SET_MOST_RECENT_PROGRAM:\n      fetch\n        .updateUserData(state.uid, { mostRecentProgram: action.value })\n        .then(response => {})\n        .catch(err => {\n          state.error = err;\n          console.log(err);\n        });\n      return Object.assign({}, state, { mostRecentProgram: action.value });\n    default:\n      return state;\n  }\n}\nexport default userDataReducer;\n","import {\n  SET_PROGRAM_CODE,\n  SET_PROGRAM_LANGUAGE,\n  SET_PROGRAM_NAME,\n  SET_PROGRAM_THUMBNAIL,\n  DELETE_PROGRAM,\n  LOAD_PROGRAMS,\n  CLEAR_PROGRAMS,\n  SET_PROGRAM_DIRTY,\n  ADD_PROGRAM,\n} from \"../actions/programsActions.js\";\nimport Immutable from \"immutable\";\n\nlet initialState = Immutable.Map();\n\nfunction programsReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_PROGRAMS:\n      return Immutable.fromJS(action.programs);\n    case SET_PROGRAM_CODE:\n      return state.setIn([action.program, \"code\"], action.value);\n    case SET_PROGRAM_LANGUAGE:\n      return state.setIn([action.program, \"language\"], action.value);\n    case SET_PROGRAM_DIRTY:\n      return state.setIn([action.program, \"dirty\"], action.value);\n    case SET_PROGRAM_NAME:\n      return state.setIn([action.program, \"name\"], action.value);\n    case SET_PROGRAM_THUMBNAIL:\n      return state.setIn([action.program, \"thumbnail\"], action.value);\n    case ADD_PROGRAM:\n      return state.set(action.program, Immutable.fromJS(action.data));\n    case DELETE_PROGRAM:\n      return state.delete(action.program);\n    case CLEAR_PROGRAMS:\n      return Immutable.Map();\n    default:\n      return state;\n  }\n}\n\nexport default programsReducer;\n","import {\n  CLEAR_OUTPUT,\n  SET_RUN_RESULT,\n  SET_OUTPUT_LANGUAGE,\n  SET_OUTPUT,\n} from \"../actions/outputActions\";\nimport { PYTHON } from \"../constants\";\n\nconst initialState = {\n  runResult: \"\",\n  language: PYTHON,\n};\n\nfunction outputReducer(state = initialState, action) {\n  switch (action.type) {\n    case CLEAR_OUTPUT:\n      return initialState;\n    case SET_RUN_RESULT:\n      return Object.assign({}, state, { runResult: action.value });\n    case SET_OUTPUT_LANGUAGE:\n      return Object.assign({}, state, { language: action.value });\n    case SET_OUTPUT:\n      return Object.assign({}, state, { runResult: action.runResult, language: action.language });\n    default:\n      return state;\n  }\n}\n\nexport default outputReducer;\n","import { SCREEN_RESIZE, TOGGLE_PANEL, SET_PANEL } from \"../actions/uiActions\";\n\nconst initialState = {\n  screenWidth: typeof window === \"object\" ? window.innerWidth : null,\n  screenHeight: typeof window === \"object\" ? window.innerHeight : null,\n  panelOpen: false,\n};\n\nfunction uiReducer(state = initialState, action) {\n  switch (action.type) {\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, { screenWidth: action.width, screenHeight: action.height });\n    case TOGGLE_PANEL:\n      return Object.assign({}, state, { panelOpen: !state.panelOpen });\n    case SET_PANEL:\n      return Object.assign({}, state, { panelOpen: action.value });\n    default:\n      return state;\n  }\n}\n\nexport default uiReducer;\n","import { combineReducers } from \"redux\";\nimport userDataReducer from \"./userDataReducer\";\nimport programsReducer from \"./programsReducer\";\nimport outputReducer from \"./outputReducer\";\nimport uiReducer from \"./uiReducer\";\n\nconst appReducers = combineReducers({\n  userData: userDataReducer,\n  output: outputReducer,\n  programs: programsReducer,\n  ui: uiReducer,\n});\n\nexport default appReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles/global.scss\";\nimport Root from \"./components/containers/AppContainer.js\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore } from \"redux\";\nimport appReducers from \"./reducers\";\nimport config from \"./firebase\";\nimport { Provider } from \"react-redux\";\nimport firebase from \"firebase\";\n\nfirebase.initializeApp(config);\n\nconst store = createStore(appReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}